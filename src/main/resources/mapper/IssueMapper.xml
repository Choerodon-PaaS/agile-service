<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.agile.infra.mapper.IssueMapper">

    <resultMap type="io.choerodon.agile.infra.dataobject.IssueDetailDO" id="issueDetail">
        <id column="issue_id" property="issueId"/>
        <id column="issue_num_splicing" property="issueNum"/>
        <id column="type_code" property="typeCode"/>
        <id column="status_id" property="statusId"/>
        <id column="status_code" property="statusCode"/>
        <id column="summary" property="summary"/>
        <id column="priority_code" property="priorityCode"/>
        <id column="priority_name" property="priorityName"/>
        <id column="reporter_id" property="reporterId"/>
        <id column="description" property="description"/>
        <id column="assignee_id" property="assigneeId"/>
        <id column="project_id" property="projectId"/>
        <id column="epic_id" property="epicId"/>
        <id column="parent_issue_id" property="parentIssueId"/>
        <id column="story_points" property="storyPoints"/>
        <id column="estimate_time" property="estimateTime"/>
        <id column="remaining_time" property="remainingTime"/>
        <id column="issue_epic_name" property="epicName"/>
        <id column="color" property="color"/>
        <id column="epic_color" property="epicColor"/>
        <id column="parent_issue_num" property="parentIssueNum"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <association property="activeSprint" column="issue_id" select="queryActiveSprintNameByIssueId"/>
        <collection property="versionIssueRelDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueDetailDO"
                    select="queryVersionIssueRelByIssueId"/>
        <collection property="closeSprint" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueDetailDO"
                    select="queryCloseSprintNameByIssueId"/>
        <collection property="labelIssueRelDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueDetailDO"
                    select="queryLabelIssueByIssueId"/>
        <collection property="componentIssueRelDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueDetailDO"
                    select="queryComponentIssueRelByIssueId"/>
        <collection property="issueCommentDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueDetailDO"
                    select="queryIssueCommentByIssueId"/>
        <collection property="issueAttachmentDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueDetailDO"
                    select="queryIssueAttachmentByIssueId"/>
        <collection property="subIssueDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueDetailDO"
                    select="querySubIssueByIssueId"/>
    </resultMap>

    <resultMap id="issueSearch" type="io.choerodon.agile.infra.dataobject.IssueSearchDO">
        <id property="issueId" column="issue_id"/>
        <id property="issueNum" column="issue_num"/>
        <id property="typeCode" column="type_code"/>
        <id property="summary" column="summary"/>
        <id property="reporterId" column="reporter_id"/>
        <id property="description" column="description"/>
        <id property="assigneeId" column="assignee_id"/>
        <id property="projectId" column="project_id"/>
        <id property="epicId" column="epic_id"/>
        <id property="sprintId" column="sprint_id"/>
        <id property="storyPoints" column="story_points"/>
        <id property="statusId" column="status_id"/>
        <id property="categoryCode" column="category_code"/>
        <id property="statusName" column="status_name"/>
        <id property="priorityCode" column="priority_code"/>
        <id property="priorityName" column="priority_name"/>
        <id property="objectVersionNumber" column="object_version_number"/>
        <id property="epicName" column="issue_epic_name"/>
        <id property="color" column="color"/>
        <collection property="versionIds" autoMapping="true" ofType="java.lang.Long">
            <id column="version_id"/>
        </collection>
        <collection property="versionNames" autoMapping="true" ofType="java.lang.String">
            <id column="version_name"/>
        </collection>
    </resultMap>

    <resultMap type="io.choerodon.agile.infra.dataobject.IssueComponentDetailDO" id="issueComponentDetail">
        <id column="issue_id" property="issueId"/>
        <id column="type_code" property="typeCode"/>
        <id column="summary" property="summary"/>
        <id column="status_id" property="statusId"/>
        <id column="priority_code" property="priorityCode"/>
        <id column="assignee_id" property="assigneeId"/>
        <id column="project_id" property="projectId"/>
        <id column="priority_name" property="priorityName"/>
        <id column="status_code" property="statusCode"/>
        <id column="status_name" property="statusName"/>
        <id column="issue_num" property="issueNum"/>
        <id column="reporter_id" property="reporterId"/>
        <id column="last_update_date" property="lastUpdateDate"/>
        <id column="creation_date" property="creationDate"/>
        <id column="epic_name" property="epicName"/>
        <id column="epic_color" property="epicColor"/>
        <collection property="versionIssueRelDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueComponentDetailDO"
                    select="queryVersionIssueRelByIssueId"/>
        <collection property="labelIssueRelDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueComponentDetailDO"
                    select="queryLabelIssueByIssueId"/>
        <collection property="componentIssueRelDOList" column="issue_id"
                    ofType="io.choerodon.agile.infra.dataobject.IssueComponentDetailDO"
                    select="queryComponentIssueRelByIssueId"/>
    </resultMap>

    <delete id="removeFromSprint">
        DELETE
        FROM agile_issue_sprint_rel
        WHERE project_id = #{projectId} AND sprint_id = #{sprintId}
    </delete>

    <select id="queryIssueDetail" resultMap="issueDetail">
        SELECT
            ai.*,
            ais.category_code                                                                AS status_code,
            ais.name                                                                         AS status_name,
            alv.name                                                                         AS priority_name,
            ai2.epic_name                                                                    AS issue_epic_name,
            alv2.name                                                                        AS epic_color,
            alv3.name                                                                        AS color_value,
            IF(ai3.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai3.issue_num)) AS parent_issue_num,
            CONCAT_WS('-', api.project_code, ai.issue_num)                                   AS issue_num_splicing
        FROM agile_issue ai LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id AND ais.project_id = ai.project_id
            LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
            LEFT JOIN agile_issue ai2 ON ai2.issue_id = ai.epic_id
            LEFT JOIN agile_lookup_value alv2 ON ai2.color_code = alv2.value_code
            LEFT JOIN agile_lookup_value alv3 ON ai.color_code = alv3.value_code
            LEFT JOIN agile_issue ai3 ON ai3.issue_id = ai.parent_issue_id
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.issue_id = #{issueId} AND ai.project_id = #{projectId}
    </select>

    <select id="queryVersionIssueRelByIssueId" resultType="io.choerodon.agile.infra.dataobject.VersionIssueRelDO">
        SELECT
            avir.*,
            apr.name,
            apr.status_code
        FROM agile_version_issue_rel avir LEFT JOIN agile_product_version apr ON avir.version_id = apr.version_id
        WHERE avir.issue_id = #{issueId}
    </select>

    <select id="queryVersionNameByIssueIds" resultType="io.choerodon.agile.infra.dataobject.VersionIssueRelDO">
        SELECT
        avir.*,
        apr.name
        FROM agile_version_issue_rel avir LEFT JOIN agile_product_version apr ON avir.version_id = apr.version_id
        WHERE avir.project_id = #{projectId}
        <if test='relationType != null and relationType != ""'>
            AND avir.relation_type = #{relationType}
        </if>
        AND avir.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryCloseSprintNameByIssueId" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
            asp.sprint_id,
            asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.issue_id = #{issueId} AND aisr.sprint_id = asp.sprint_id AND asp.status_code = 'closed'
    </select>

    <select id="querySprintNameByIssueId" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
            asp.sprint_id,
            asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.issue_id = #{issueId} AND aisr.sprint_id = asp.sprint_id
    </select>

    <select id="querySprintNameByIssueIds" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
        aisr.issue_id, asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.project_id = #{projectId} AND aisr.sprint_id = asp.sprint_id AND asp.status_code = 'closed'
        AND aisr.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryActiveSprintNameByIssueId" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
            asp.sprint_id,
            asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.issue_id = #{issueId} AND aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
    </select>

    <select id="queryLabelIssueByIssueId" resultType="io.choerodon.agile.infra.dataobject.LabelIssueRelDO">
        SELECT
            ali.*,
            ail.label_name
        FROM agile_label_issue_rel ali LEFT JOIN agile_issue_label ail ON ali.label_id = ail.label_id
        WHERE ali.issue_id = #{issueId}
    </select>

    <select id="queryComponentIssueRelByIssueId" resultType="io.choerodon.agile.infra.dataobject.ComponentIssueRelDO">
        SELECT
            acir.*,
            aic.name
        FROM agile_component_issue_rel acir LEFT JOIN agile_issue_component aic ON aic.component_id = acir.component_id
        WHERE acir.issue_id = #{issueId}
    </select>

    <select id="queryIssueCommentByIssueId" resultType="io.choerodon.agile.infra.dataobject.IssueCommentDO">
        SELECT *
        FROM agile_issue_comment
        WHERE issue_id = #{issueId}
    </select>

    <select id="queryIssueAttachmentByIssueId" resultType="io.choerodon.agile.infra.dataobject.IssueAttachmentDO">
        SELECT *
        FROM agile_issue_attachment
        WHERE issue_id = #{issueId}
    </select>

    <select id="querySubIssueByIssueId" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT
            ai.issue_id,
            ai.type_code,
            ai.summary,
            ai.priority_code,
            ai.assignee_id,
            ai.remaining_time,
            ai.project_id,
            ais.category_code                              AS status_code,
            ais.name                                       AS status_name,
            alv.name                                       AS priority_name,
            CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num
        FROM agile_issue ai LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id AND ais.project_id = ai.project_id
            LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.parent_issue_id = #{issueId}
    </select>

    <select id="queryIssueListWithoutSub" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT search.* from (
        SELECT
        ai.issue_id,
        ai.type_code,
        ai.summary,
        ai.priority_code,
        ai.assignee_id,
        ai.project_id,
        ai.status_id,
        alv.name AS priority_name,
        ais.category_code AS status_code,
        ais.name AS status_name,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id AND ais.project_id = ai.project_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId} AND ai.type_code != 'sub_task' AND ai.type_code != 'issue_test'
        <if test='searchArgs != null'>
            <if test='searchArgs.summary != null and searchArgs.summary != "" '>
                AND position(#{searchArgs.summary} IN ai.summary)
            </if>
            <if test='searchArgs.assigneeId != null and searchArgs.assigneeId != ""'>
                AND ai.assignee_id = #{searchArgs.assigneeId}
            </if>
        </if>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.typeCode != null and advancedSearchArgs.typeCode.size > 0'>
                AND ai.type_code IN
                <foreach collection="advancedSearchArgs.typeCode" item="typeCode" open="(" separator="," close=")">
                    #{typeCode}
                </foreach>
            </if>
            <if test='advancedSearchArgs.assigneeIds != null and advancedSearchArgs.assigneeIds.size > 0'>
                AND ai.assignee_id IN
                <foreach collection="advancedSearchArgs.assigneeIds" item="assigneeId" open="(" separator="," close=")">
                    #{assigneeId}
                </foreach>
            </if>
            <if test='advancedSearchArgs.priorityCode != null and advancedSearchArgs.priorityCode.size > 0'>
                AND ai.priority_code IN
                <foreach collection="advancedSearchArgs.priorityCode" item="priorityCode" open="(" separator=","
                         close=")">
                    #{priorityCode}
                </foreach>
            </if>
            <if test='advancedSearchArgs.statusCode != null and advancedSearchArgs.statusCode.size > 0'>
                AND ais.category_code IN
                <foreach collection="advancedSearchArgs.statusCode" item="statusCode" open="(" separator=","
                         close=")">
                    #{statusCode}
                </foreach>
            </if>
        </if>
        <if test='searchArgs != null'>
            <if test='searchArgs.component != null and searchArgs.component != "" '>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM agile_component_issue_rel acir,agile_issue_component aic
                where acir.component_id = aic.component_id and position(#{searchArgs.component} IN aic.name) )
            </if>
            <if test='searchArgs.epic != null and searchArgs.epic != "" '>
                AND ai.issue_id in (
                SELECT ai3.issue_id FROM agile_issue ai3 ,agile_issue ai4
                where ai3.epic_id = ai4.issue_id and position(#{searchArgs.epic} IN ai4.epic_name) )
            </if>
            <if test='searchArgs.version != null and searchArgs.version != "" '>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM agile_version_issue_rel avir,agile_product_version apv
                where avir.version_id = apv.version_id and position(#{searchArgs.version} IN apv.name) )
            </if>
            <if test='searchArgs.sprint != null and searchArgs.sprint != "" '>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM agile_issue_sprint_rel aisr,agile_sprint as2
                where aisr.sprint_id = as2.sprint_id and position(#{searchArgs.sprint} IN as2.sprint_name) )
            </if>
        </if>
        <if test='otherArgs != null'>
            <if test='otherArgs.type != null and otherArgs.type != "" and
            otherArgs.id != null and otherArgs.id.size > 0'>
                AND ai.issue_id in (
                SELECT oa.issue_id FROM
                <if test='otherArgs.type == "component" '>
                    agile_component_issue_rel oa WHERE oa.component_id
                </if>
                <if test='otherArgs.type == "version" '>
                    agile_version_issue_rel oa WHERE oa.version_id
                </if>
                <if test='otherArgs.type == "epic" '>
                    agile_issue oa where oa.epic_id
                </if>
                <if test='otherArgs.type == "label" '>
                    agile_label_issue_rel oa where oa.label_id
                </if>
                <if test='otherArgs.type =="sprint"'>
                    agile_issue_sprint_rel oa where oa.sprint_id
                </if>
                in
                <foreach collection="otherArgs.id" item="id" open="(" separator=","
                         close=")">
                    #{id}
                </foreach>
                )
            </if>
            <if test='otherArgs.issueIds != null and otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
        </if>
        )search where 1=1
        <if test='searchArgs != null'>
            <if test='searchArgs.issueNum != null and searchArgs.issueNum != ""'>
                AND position(#{searchArgs.issueNum} IN search.issue_num)
            </if>
        </if>
        <if test='content != null and content != ""'>
            AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE CONCAT(CONCAT('%',
            #{content}), '%'))
        </if>
    </select>

    <select id="queryIssueByOption" resultType="io.choerodon.agile.infra.dataobject.IssueNumDO">
        SELECT
        ai.issue_id, ai.summary,
        ai.project_id, ai.type_code,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId} AND ai.type_code != 'issue_epic'
        <if test="activeSprintId != null">
            AND ai.issue_id IN (
            SELECT
            issue_id
            FROM
            agile_issue_sprint_rel
            WHERE
            project_id = #{projectId}
            AND sprint_id = #{activeSprintId})
        </if>
        <if test="issueId != null">
            AND ai.issue_id != #{issueId}
        </if>
        <if test="issueNum != null">
            AND ai.issue_num != #{issueNum}
        </if>
        <if test='content != null'>
            AND (ai.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR ai.summary LIKE CONCAT(CONCAT('%',
            #{content}), '%'))
        </if>
    </select>

    <select id="queryIssueByOptionForAgile" resultType="io.choerodon.agile.infra.dataobject.IssueNumDO">
        SELECT
        ai.issue_id, ai.summary,
        ai.project_id, ai.type_code,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId} AND ai.type_code != 'issue_epic'
        AND ai.type_code != 'sub_task' AND ai.type_code != 'issue_test'
        <if test="issueId != null">
            AND ai.issue_id != #{issueId}
        </if>
        <if test="issueNum != null">
            AND ai.issue_num != #{issueNum}
        </if>
        <if test='content != null'>
            AND (ai.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR ai.summary LIKE CONCAT(CONCAT('%',
            #{content}), '%'))
        </if>
    </select>

    <select id="queryEpicList" resultType="io.choerodon.agile.infra.dataobject.EpicDataDO">
        SELECT
            ai.issue_id,
            ai.summary,
            ai.description,
            ai.project_id,
            ai.epic_name,
            alv.name AS color,
            ai.object_version_number,
            ai.epic_sequence
        FROM agile_issue ai LEFT JOIN agile_lookup_value alv ON ai.color_code = alv.value_code
        WHERE ai.project_id = #{projectId} AND ai.type_code = 'issue_epic'
        ORDER BY ai.epic_sequence DESC
    </select>

    <select id="queryStoryMapEpicList" resultType="io.choerodon.agile.infra.dataobject.StoryMapEpicDO">
        SELECT
            ai.issue_id,
            ai.summary,
            ai.description,
            ai.project_id,
            ai.epic_name,
            alv. NAME AS color,
            ai.object_version_number,
            ai.epic_sequence,
            CONCAT_WS(
                '-',
                api.project_code,
                ai.issue_num
            ) AS issue_num,
            alv2. NAME AS status_color,
            ais. NAME AS status_name
        FROM
            agile_issue ai
        LEFT JOIN agile_lookup_value alv ON ai.color_code = alv.value_code
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv2 ON alv2.value_code = CASE ais.category_code
        WHEN 'todo' THEN
            'issue_status_color_todo'
        WHEN 'doing' THEN
            'issue_status_color_doing'
        WHEN 'done' THEN
            'issue_status_color_done'
        ELSE
            'issue_status_color_todo'
        END
        WHERE
            ai.project_id = #{projectId}
        AND ai.type_code = 'issue_epic'
        <if test="showDoneEpic == null or showDoneEpic == false">
            and ai.issue_id not in
            (select adl1.issue_id from agile_data_log adl1,
            (select max(log_id) as log_id from agile_data_log where field = 'resolution' and project_id = #{projectId} group by issue_id)
            adlh where adl1.log_id = adlh.log_id and adl1.new_value is not null
            )
        </if>
        <if test='onlyStory != null and onlyStory == true'>
            AND ai.type_code = 'story'
        </if>
        <if test='assigneeId != null'>
            AND ai.assignee_id = #{assigneeId}
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
        ORDER BY
            ai.epic_sequence DESC
    </select>

    <select id="queryEpicListByEpic" resultType="io.choerodon.agile.infra.dataobject.EpicDataDO">
        SELECT
            ai.issue_id,
            ai.summary,
            ai.description,
            ai.project_id,
            ai.epic_name,
            alv.name AS color,
            ai.object_version_number,
            ai.epic_sequence
        FROM agile_issue ai LEFT JOIN agile_lookup_value alv ON ai.color_code = alv.value_code
        WHERE ai.project_id = #{projectId} AND ai.issue_id = #{issueId}
    </select>

    <select id="queryTotalEstimateByEpicIds" resultType="io.choerodon.agile.infra.dataobject.IssueCountDO">
        SELECT ai.issue_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_issue ai
        LEFT JOIN (SELECT ai1.epic_id AS epic_id, SUM(ai1.story_points) AS issue_count
        FROM agile_issue ai1
        WHERE ai1.project_id = #{projectId} AND ai1.type_code = 'story'
        AND ai1.epic_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
        GROUP BY ai1.epic_id
        ) ic ON ic.epic_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
    </select>

    <select id="queryNotEstimateIssueCountByEpicIds" resultType="io.choerodon.agile.infra.dataobject.IssueCountDO">
        SELECT ai.issue_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_issue ai
        LEFT JOIN (SELECT ai1.epic_id AS epic_id, COUNT(1) AS issue_count
        FROM agile_issue ai1
        WHERE ai1.project_id = #{projectId} AND ai1.type_code = 'story' AND
        (ai1.story_points IS NULL OR ai1.story_points = 0) AND ai1.epic_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
        GROUP BY ai1.epic_id
        ) ic ON ic.epic_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
    </select>


    <select id="queryIssueCountByEpicIds" resultType="io.choerodon.agile.infra.dataobject.IssueCountDO">
        SELECT ai.issue_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_issue ai
        LEFT JOIN (SELECT ai1.epic_id AS epic_id, COUNT(1) AS issue_count
        FROM agile_issue ai1
        WHERE ai1.project_id = #{projectId} AND ai1.epic_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
        GROUP BY ai1.epic_id
        ) ic ON ic.epic_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
    </select>

    <select id="queryDoneIssueCountByEpicIds" resultType="io.choerodon.agile.infra.dataobject.IssueCountDO">
        SELECT ai.issue_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_issue ai
        LEFT JOIN (SELECT ai1.epic_id AS epic_id, COUNT(1) AS issue_count
        FROM agile_issue ai1, agile_issue_status ais
        WHERE ai1.project_id = #{projectId} AND ai1.status_id = ais.id AND
        ais.category_code = 'done' AND ai1.epic_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
        GROUP BY ai1.epic_id
        ) ic ON ic.epic_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id IN
        <foreach collection="epicIds" item="epicId" open="("
                 separator="," close=")">
            #{epicId}
        </foreach>
    </select>

    <select id="searchIssue" resultMap="issueSearch">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code, ai.summary,
        ai.reporter_id, ai.description,
        ai.assignee_id, ai.project_id,
        ai.epic_id, asp1.sprint_id,
        ai.story_points, ai.status_id,
        ais.category_code,
        ais.name AS status_name,
        ai.object_version_number, ai.priority_code,
        alv.name AS priority_name,
        ai1.epic_name AS issue_epic_name,
        alv2.name AS color,
        apv1.version_id AS version_id,
        apv1.name AS version_name
        FROM agile_issue ai
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN agile_issue ai1 ON ai.epic_id = ai1.issue_id
        LEFT JOIN agile_lookup_value alv2 ON ai1.color_code = alv2.value_code
        LEFT JOIN (SELECT aisr.issue_id, asp.sprint_id
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai.issue_id
        LEFT JOIN (SELECT avir.issue_id, avir.version_id, apv.name
        FROM agile_version_issue_rel avir, agile_product_version apv
        WHERE apv.project_id = #{projectId} AND avir.version_id = apv.version_id AND avir.relation_type = 'fix'
        ) apv1 ON apv1.issue_id = ai.issue_id
        WHERE ai.issue_id IN
        <foreach collection="issueIds" item="issueId" index="index"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        order by field(ai.issue_id,
        <foreach collection="issueIds" item="issueId" index="index" separator=",">
            #{issueId}
        </foreach>)
    </select>

    <select id="querySprintIssueIdsByCondition" resultType="java.lang.Long">
        SELECT
        ai.issue_id
        FROM agile_issue ai,agile_issue_status ais
        WHERE ai.status_id = ais.id AND ais.category_code != 'done' and ai.project_id = #{projectId} AND ai.type_code != 'sub_task' AND ai.type_code != 'issue_epic' AND ai.type_code != 'issue_test'
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.versionId != null'>
                AND ai.issue_id IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id =
                #{advancedSearchArgs.versionId} AND relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.epicId != null'>
                AND ai.epic_id = #{advancedSearchArgs.epicId}
            </if>
            <if test='advancedSearchArgs.noVersion != "" and advancedSearchArgs.noVersion == "true"'>
                AND ai.issue_id NOT IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id != 0 AND
                relation_type = 'fix')
            </if>
            <if test='advancedSearchArgs.noEpic != "" and advancedSearchArgs.noEpic == "true"'>
                AND (ai.epic_id IS NULL OR ai.epic_id = 0)
            </if>
            <if test='advancedSearchArgs.ownIssue != "" and advancedSearchArgs.ownIssue == "true"'>
                AND ai.assignee_id = #{userId}
            </if>
            <if test='advancedSearchArgs.onlyStory != "" and advancedSearchArgs.onlyStory == "true"'>
                AND ai.type_code = 'story'
            </if>
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
    </select>

    <select id="queryBacklogIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai
            LEFT JOIN (SELECT
                           aisr.issue_id,
                           asp.sprint_id
                       FROM agile_issue_sprint_rel aisr, agile_sprint asp
                       WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
                      ) asp1 ON asp1.issue_id = ai.issue_id
            ,
            agile_issue_status ais
        WHERE ai.project_id = #{projectId} AND (asp1.sprint_id IS NULL OR asp1.sprint_id = 0)
              AND ai.status_id = ais.id AND ais.category_code != 'done'
              AND ai.type_code NOT IN ('sub_task', 'issue_epic', 'issue_test')
    </select>

    <insert id="batchIssueToVersion">
        INSERT IGNORE INTO agile_version_issue_rel
        (version_id, issue_id, project_id, relation_type, creation_date, last_update_date, created_by, last_updated_by)
        values
        <foreach collection="issueIds" item="issueId" index="index"
                 separator=",">
            (#{versionId}, #{issueId}, #{projectId}, 'fix', #{date}, #{date}, #{userId}, #{userId})
        </foreach>
    </insert>

    <select id="queryInVersionIssueIds" resultType="java.lang.Long">
        SELECT DISTINCT(ai.issue_id)
        FROM agile_issue ai
        LEFT JOIN agile_version_issue_rel avir ON avir.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND avir.version_id = #{versionId}
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <update id="batchIssueToEpic">
        UPDATE agile_issue
        SET epic_id = #{epicId}
        WHERE project_id = #{projectId} AND issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </update>

    <update id="batchUpdateIssueRank">
        UPDATE agile_issue
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="rank =case" suffix="end,">
                <foreach collection="moveIssues" item="moveIssue">
                    when issue_id = #{moveIssue.issueId} then #{moveIssue.rank}
                </foreach>
            </trim>
        </trim>
        WHERE project_id = #{projectId} AND issue_id IN
        <foreach collection="moveIssues" item="moveIssue" open="("
                 separator="," close=")">
            #{moveIssue.issueId,jdbcType=BIGINT}
        </foreach>
    </update>

    <select id="querySubIssueIds" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND parent_issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueByIssueIds" resultMap="issueSearch">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code, ai.summary,
        ai.reporter_id, ai.description,
        ai.assignee_id, ai.project_id,
        ai.epic_id, asp1.sprint_id,
        ai.story_points, ai.status_id,
        ais.category_code,
        ais.name AS status_name,
        ai.object_version_number, ai.priority_code,
        alv.name AS priority_name,
        ai1.epic_name AS issue_epic_name,
        alv2.name AS color,
        apv1.version_id AS version_id,
        apv1.name AS version_name
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.id
        LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN agile_issue ai1 ON ai.epic_id = ai1.issue_id
        LEFT JOIN agile_lookup_value alv2 ON ai1.color_code = alv2.value_code
        LEFT JOIN (SELECT aisr.issue_id, asp.sprint_id
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai.issue_id
        LEFT JOIN (SELECT avir.issue_id, avir.version_id, apv.name
        FROM agile_version_issue_rel avir, agile_product_version apv
        WHERE apv.project_id = #{projectId} AND avir.version_id = apv.version_id
        ) apv1 ON apv1.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueSprintNotClosed" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT
            ai.issue_id,
            asp1.sprint_id,
            ai.status_id
        FROM agile_issue ai
            LEFT JOIN (SELECT
                           aisr.issue_id,
                           asp.sprint_id
                       FROM agile_issue_sprint_rel aisr, agile_sprint asp
                       WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
                             AND aisr.issue_id = #{issueId}
                      ) asp1 ON asp1.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id = #{issueId}
    </select>

    <select id="queryIssueSubList" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT *
        FROM
            agile_issue
        WHERE
            parent_issue_id = #{issueId} AND project_id = #{projectId}
    </select>

    <update id="batchUpdateIssueEpicId">
        UPDATE agile_issue
        SET epic_id = 0
        WHERE project_id = #{projectId} AND epic_id = #{issueId}
    </update>

    <select id="queryIssueEpicSelectList" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT
            issue_id,
            epic_name
        FROM
            agile_issue
        WHERE
            project_id = #{projectId}
            AND type_code = 'issue_epic'
        ORDER BY epic_sequence DESC
    </select>

    <delete id="batchRemoveFromVersion">
        DELETE
        FROM
        agile_version_issue_rel avir,
        agile_product_version apv
        WHERE
        apv.version_id = avir.version_id
        AND apv.status_code != 'archived'
        WHERE avir.project_id = #{projectId} AND avir.relation_type = 'fix' AND avir.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </delete>

    <select id="queryIssueIdOrderByRankDesc" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        ORDER BY rank DESC
    </select>

    <select id="queryIssueIdOrderByRankAsc" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        ORDER BY rank ASC
    </select>

    <select id="queryRightRank" resultType="java.lang.String">
        SELECT MIN(ai.rank)
        FROM agile_issue ai
        LEFT JOIN (SELECT aisr1.sprint_id, aisr1.issue_id
        FROM agile_issue_sprint_rel aisr1, agile_sprint asp
        WHERE aisr1.project_id = #{projectId} AND aisr1.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed') aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic') AND ai.rank > #{leftRank}
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="queryLeftRank" resultType="java.lang.String">
        SELECT MAX(ai.rank)
        FROM agile_issue ai
        LEFT JOIN (SELECT aisr1.sprint_id, aisr1.issue_id
        FROM agile_issue_sprint_rel aisr1, agile_sprint asp
        WHERE aisr1.project_id = #{projectId} AND aisr1.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed') aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic') AND ai.rank &lt;
        #{rightRank}
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="queryRank" resultType="java.lang.String">
        SELECT ai.rank
        FROM agile_issue ai
        LEFT JOIN (SELECT aisr1.sprint_id, aisr1.issue_id
        FROM agile_issue_sprint_rel aisr1, agile_sprint asp
        WHERE aisr1.project_id = #{projectId} AND aisr1.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed') aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id = #{outsetIssueId}
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <update id="subTaskToDestination">
        UPDATE agile_issue ai, agile_issue_status ais, agile_issue ai2
        SET ai2.sprint_id = #{targetSprintId}
        WHERE ai.project_id = #{projectId} AND ai.sprint_id = #{sprintId}
              AND ai.status_id = ais.id AND ais.category_code != 'done'
              AND ai2.parent_issue_id = ai.issue_id
    </update>

    <select id="selectLabelNameByIssueId" resultType="io.choerodon.agile.infra.dataobject.IssueLabelDO">
        SELECT ail.*
        FROM
            agile_label_issue_rel alir,
            agile_issue_label ail
        WHERE
            ail.label_id = alir.label_id
            AND alir.issue_id = #{issueId}
    </select>

    <select id="listByOptions" resultType="io.choerodon.agile.infra.dataobject.IssueCommonDO">
        SELECT
            ai.issue_id,
            ai.type_code,
            ai.summary,
            ai.priority_code,
            ai.assignee_id,
            ai.project_id,
            alv.name                                       AS priority_name,
            ais.category_code                              AS status_code,
            ais.name                                       AS status_name,
            CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num
        FROM agile_issue ai LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
            LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id AND ais.project_id = ai.project_id
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId} AND ai.type_code = #{typeCode} AND ai.type_code != 'sub_task'
    </select>

    <select id="querySubTaskIds" resultType="java.lang.Long">
        SELECT ai2.issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr, agile_issue ai2
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
              AND ai.status_id = ais.id AND ais.category_code != 'done'
              AND ai2.parent_issue_id = ai.issue_id
    </select>

    <delete id="removeIssueFromSprintByIssueIds">
        DELETE FROM agile_issue_sprint_rel WHERE EXISTS (SELECT 0 FROM agile_sprint asp  WHERE asp.sprint_id =
        agile_issue_sprint_rel.sprint_id AND asp.status_code != 'closed' ) and agile_issue_sprint_rel.project_id = #{projectId}
        AND agile_issue_sprint_rel.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" separator="," close=")">
            #{issueId}
        </foreach>
    </delete>

    <delete id="deleteIssueFromSprintByIssueId">
        DELETE
        FROM agile_issue_sprint_rel
        WHERE project_id = #{projectId} AND issue_id = #{issueId}
    </delete>

    <insert id="issueToDestinationByIds">
        INSERT IGNORE INTO agile_issue_sprint_rel
        (issue_id, sprint_id, project_id, creation_date, last_update_date, created_by, last_updated_by) VALUES
        <foreach collection="issueIds" item="issueId" index="index"
                 separator=",">
            (#{issueId}, #{sprintId}, #{projectId}, #{date}, #{date}, #{userId}, #{userId})
        </foreach>
    </insert>

    <insert id="issueToSprint">
        INSERT IGNORE
        INTO agile_issue_sprint_rel (issue_id, sprint_id, project_id, creation_date, last_update_date, created_by, last_updated_by)
        VALUES (#{issueId}, #{sprintId}, #{projectId}, #{date}, #{date}, #{userId}, #{userId})
    </insert>

    <select id="querySubIssueIdsByIssueId" resultType="java.lang.Long">
        SELECT issue_id
        FROM agile_issue
        WHERE project_id = #{projectId} AND parent_issue_id = #{issueId}
    </select>

    <select id="queryExportIssues" resultType="io.choerodon.agile.infra.dataobject.ExportIssuesDO">
        SELECT search.* from (SELECT
        ai.issue_id,
        ai.issue_num,
        ai.summary,
        ai.assignee_id,
        ai.reporter_id,
        IF(alv.name = 'Epic', '史诗', alv.name) AS type_name,
        ais.name AS status_name,
        ai.description,
        asp1.sprint_name,
        ai.creation_date,
        ai.last_update_date,
        alv1.name AS priority_name,
        IF((ai.parent_issue_id IS NULL OR ai.parent_issue_id = 0), '否', '是') AS sub_task,
        ai.estimate_time,
        ai.remaining_time
        FROM agile_issue ai
        LEFT JOIN agile_lookup_value alv ON alv.value_code = ai.type_code
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
        LEFT JOIN agile_lookup_value alv1 ON alv1.value_code = ai.priority_code
        LEFT JOIN (SELECT
        aisr.issue_id,
        asp.sprint_name
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.project_id = #{projectId} AND aisr.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code != 'sub_task'
        <if test='searchArgs != null'>
            <if test='searchArgs.summary != null and searchArgs.summary != "" '>
                AND position(#{searchArgs.summary} IN ai.summary)
            </if>
            <if test='searchArgs.assigneeId != null and searchArgs.assigneeId != ""'>
                AND ai.assignee_id = #{searchArgs.assigneeId}
            </if>
        </if>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.typeCode != null and advancedSearchArgs.typeCode.size > 0'>
                AND ai.type_code IN
                <foreach collection="advancedSearchArgs.typeCode" item="typeCode" open="(" separator="," close=")">
                    #{typeCode}
                </foreach>
            </if>
            <if test='advancedSearchArgs.priorityCode != null and advancedSearchArgs.priorityCode.size > 0'>
                AND ai.priority_code IN
                <foreach collection="advancedSearchArgs.priorityCode" item="priorityCode" open="(" separator=","
                         close=")">
                    #{priorityCode}
                </foreach>
            </if>
            <if test='advancedSearchArgs.statusCode != null and advancedSearchArgs.statusCode.size > 0'>
                AND ais.category_code IN
                <foreach collection="advancedSearchArgs.statusCode" item="statusCode" open="(" separator=","
                         close=")">
                    #{statusCode}
                </foreach>
            </if>
        </if>
        <if test='otherArgs != null'>
            <if test='otherArgs.type != null and otherArgs.type != "" and
                                otherArgs.id != null and otherArgs.id.size > 0'>
                AND ai.issue_id in (
                SELECT oa.issue_id FROM
                <if test='otherArgs.type == "component" '>
                    agile_component_issue_rel oa WHERE oa.component_id
                </if>
                <if test='otherArgs.type == "version" '>
                    agile_version_issue_rel oa WHERE oa.version_id
                </if>
                <if test='otherArgs.type == "sprint" '>
                    agile_issue_sprint_rel oa where oa.sprint_id
                </if>
                in
                <foreach collection="otherArgs.id" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
                )
            </if>
            <if test='otherArgs.issueIds != null and otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
        </if>
        )search where 1=1
        <if test='searchArgs != null'>
            <if test='searchArgs.issueNum != null and searchArgs.issueNum != ""'>
                AND position(#{searchArgs.issueNum} IN search.issue_num)
            </if>
        </if>
        <if test='content != null and content != ""'>
            AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE CONCAT(CONCAT('%',
            #{content}), '%'))
        </if>
    </select>

    <select id="queryExportIssue" resultType="io.choerodon.agile.infra.dataobject.ExportIssuesDO">
        SELECT
            ai.issue_id,
            ai.issue_num,
            ai.summary,
            ai.assignee_id,
            ai.reporter_id,
            alv.name                                                                          AS type_name,
            ais.name                                                                          AS status_name,
            ai.description,
            asp1.sprint_name,
            ai.creation_date,
            ai.last_update_date,
            alv1.name                                                                         AS priority_name,
            IF((ai.parent_issue_id IS NULL OR ai.parent_issue_id = 0), '否',
               '是')                                                                           AS sub_task,
            ai.estimate_time,
            ai.remaining_time,
            ai.estimate_time +
            sumtime.sumEstimateTime                                                           AS sumEstimateTime,
            ai.remaining_time +
            sumtime.sumRemainingTime                                                          AS sumRemainingTime,
            ai2.epic_name                                                                     AS epicName,
            ai.story_points                                                                   AS storyPoints,
            (SELECT alv2.name
             FROM agile_issue ai1, agile_issue_status ais1, agile_lookup_value alv2
             WHERE ai1.issue_id = #{issueId} AND ai1.status_id = ais1.id AND ais1.category_code =
                                                                             alv2.value_code) AS solution
        FROM agile_issue ai
            LEFT JOIN (SELECT
                           parent_issue_id,
                           SUM(estimate_time)  AS sumEstimateTime,
                           SUM(remaining_time) AS sumRemainingTime
                       FROM agile_issue
                       WHERE parent_issue_id = #{issueId}
                       GROUP BY parent_issue_id
                      ) sumtime ON sumtime.parent_issue_id = ai.issue_id
            LEFT JOIN agile_issue ai2 ON ai.epic_id = ai2.issue_id
            LEFT JOIN agile_lookup_value alv ON alv.value_code = ai.type_code
            LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
            LEFT JOIN agile_lookup_value alv1 ON alv1.value_code = ai.priority_code
            LEFT JOIN (SELECT
                           aisr.issue_id,
                           asp.sprint_name
                       FROM agile_issue_sprint_rel aisr, agile_sprint asp
                       WHERE aisr.project_id = #{projectId} AND aisr.issue_id = #{issueId}
                             AND aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
                      ) asp1 ON asp1.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.issue_id = #{issueId}
    </select>

    <select id="queryVersionNameByIssueId" resultType="io.choerodon.agile.infra.dataobject.VersionIssueRelDO">
        SELECT
        avir.*,
        apr.name
        FROM agile_version_issue_rel avir LEFT JOIN agile_product_version apr ON avir.version_id = apr.version_id
        WHERE avir.project_id = #{projectId}
        <if test='relationType != null and relationType != ""'>
            AND avir.relation_type = #{relationType}
        </if>
        AND avir.issue_id = #{issueId}
    </select>

    <select id="queryComponentNameByIssueId" resultType="java.lang.String">
        SELECT aic.name
        FROM agile_component_issue_rel acir, agile_issue_component aic
        WHERE acir.project_id = #{projectId} AND acir.issue_id = #{issueId}
              AND acir.component_id = aic.component_id
    </select>

    <select id="queryLabelNameByIssueId" resultType="java.lang.String">
        SELECT ail.label_name
        FROM agile_label_issue_rel alir, agile_issue_label ail
        WHERE alir.issue_id = #{issueId} AND alir.label_id = ail.label_id
              AND ail.project_id = #{projectId}
    </select>

    <select id="querySubIssuesByIssueId" resultType="io.choerodon.agile.infra.dataobject.ExportIssuesDO">
        SELECT
            ai.issue_id,
            ai.issue_num,
            ai.summary,
            ai.assignee_id,
            ai.reporter_id,
            alv.name AS type_name,
            ais.name AS status_name
        FROM agile_issue ai
            LEFT JOIN agile_lookup_value alv ON alv.value_code = ai.type_code
            LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
        WHERE ai.project_id = #{projectId} AND ai.parent_issue_id = #{issueId}
    </select>

    <select id="queryIssueEpicInfoByIssueIds" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        select ai.* from agile_issue ai where ai.issue_id in
        <foreach collection="issueIds" item="issueId" open="(" separator=","
                 close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueByIssueNumOrIssueId" resultType="io.choerodon.agile.infra.dataobject.IssueNumDO">
        SELECT
        ai.issue_id, ai.summary,
        ai.project_id, ai.type_code,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv ON alv.value_code = ai.type_code
        WHERE ai.project_id = #{projectId}
        <choose>
            <when test="issueId != null">
                AND ai.issue_id = #{issueId}
            </when>
            <when test="issueNum != null">
                AND ai.issue_num = #{issueNum}
            </when>
            <otherwise>
                AND FALSE
            </otherwise>
        </choose>
    </select>

    <select id="listByIssueIds" resultType="io.choerodon.agile.infra.dataobject.IssueInfoDO">
        SELECT
        ai.issue_id,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="(" separator=","
                 close=")">
            #{issueId}
        </foreach>
        ORDER BY ai.issue_id
    </select>

    <select id="listIssueWithoutSubToTestComponent" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT search.* from (
        SELECT
        ai.issue_id,
        ai.type_code,
        ai.summary,
        ai.status_id,
        ai.priority_code,
        ai.assignee_id,
        ai.project_id,
        alv.name AS priority_name,
        ais.category_code AS status_code,
        ais.name AS status_name,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id AND ais.project_id = ai.project_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        WHERE ai.project_id = #{projectId} AND ai.type_code != 'sub_task'
        <if test='searchArgs != null'>
            <if test='searchArgs.summary != null and searchArgs.summary != "" '>
                AND position(#{searchArgs.summary} IN ai.summary)
            </if>
            <if test='searchArgs.assigneeId != null and searchArgs.assigneeId != ""'>
                AND ai.assignee_id = #{searchArgs.assigneeId}
            </if>
        </if>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.typeCode != null and advancedSearchArgs.typeCode.size > 0'>
                AND ai.type_code IN
                <foreach collection="advancedSearchArgs.typeCode" item="typeCode" open="(" separator="," close=")">
                    #{typeCode}
                </foreach>
            </if>
            <if test='advancedSearchArgs.priorityCode != null and advancedSearchArgs.priorityCode.size > 0'>
                AND ai.priority_code IN
                <foreach collection="advancedSearchArgs.priorityCode" item="priorityCode" open="(" separator=","
                         close=")">
                    #{priorityCode}
                </foreach>
            </if>
            <if test='advancedSearchArgs.statusCode != null and advancedSearchArgs.statusCode.size > 0'>
                AND ais.category_code IN
                <foreach collection="advancedSearchArgs.statusCode" item="statusCode" open="(" separator=","
                         close=")">
                    #{statusCode}
                </foreach>
            </if>
        </if>
        <if test='otherArgs != null'>
            <if test='otherArgs.component != null and otherArgs.component.size > 0'>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM
                agile_component_issue_rel acir WHERE acir.component_id
                in
                <foreach collection="otherArgs.component" item="componentId" open="(" separator=","
                         close=")">
                    #{componentId}
                </foreach>
                )
            </if>
            <if test='otherArgs.version != null and otherArgs.version.size > 0'>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM
                agile_version_issue_rel avir WHERE avir.version_id
                in
                <foreach collection="otherArgs.version" item="versionId" open="(" separator=","
                         close=")">
                    #{versionId}
                </foreach>
                )
            </if>
            <if test='otherArgs.sprint != null and otherArgs.sprint.size > 0'>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM
                agile_issue_sprint_rel aisr where aisr.sprint_id
                in
                <foreach collection="otherArgs.sprint" item="sprintId" open="(" separator=","
                         close=")">
                    #{sprintId}
                </foreach>
                )
            </if>
            <if test='otherArgs.label != null and otherArgs.label.size > 0'>
                AND ai.issue_id in (
                SELECT alir.issue_id FROM
                agile_label_issue_rel alir where alir.label_id
                in
                <foreach collection="otherArgs.label" item="labelId" open="(" separator=","
                         close=")">
                    #{labelId}
                </foreach>
                )
            </if>
            <if test='otherArgs.issueIds != null and otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
        </if>
        )search where 1=1
        <if test='searchArgs != null'>
            <if test='searchArgs.issueNum != null and searchArgs.issueNum != ""'>
                AND position(#{searchArgs.issueNum} IN search.issue_num)
            </if>
        </if>
        <if test='content != null and content != ""'>
            AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE CONCAT(CONCAT('%',
            #{content}), '%'))
        </if>
    </select>

    <select id="listIssueWithoutSubDetail" resultMap="issueComponentDetail">
        SELECT search.* from (
        SELECT
        ai.issue_id,
        ai.type_code,
        ai.summary,
        ai.status_id,
        ai.priority_code,
        ai.assignee_id,
        ai.project_id,
        ai.last_update_date,
        ai.creation_date,
        ai.reporter_id,
        ai2.epic_name,
        alv2.name as epic_color,
        alv.name AS priority_name,
        ais.category_code AS status_code,
        ais.name AS status_name,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num
        FROM agile_issue ai LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id AND ais.project_id = ai.project_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue ai2 ON ai2.issue_id = ai.epic_id
        LEFT JOIN agile_lookup_value alv2 ON ai2.color_code = alv2.value_code
        WHERE ai.project_id = #{projectId} AND ai.type_code != 'sub_task'
        <if test='searchArgs != null'>
            <if test='searchArgs.summary != null and searchArgs.summary != "" '>
                AND position(#{searchArgs.summary} IN ai.summary)
            </if>
            <if test='searchArgs.assigneeId != null and searchArgs.assigneeId != ""'>
                AND ai.assignee_id = #{searchArgs.assigneeId}
            </if>
        </if>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.typeCode != null and advancedSearchArgs.typeCode.size > 0'>
                AND ai.type_code IN
                <foreach collection="advancedSearchArgs.typeCode" item="typeCode" open="(" separator="," close=")">
                    #{typeCode}
                </foreach>
            </if>
            <if test='advancedSearchArgs.priorityCode != null and advancedSearchArgs.priorityCode.size > 0'>
                AND ai.priority_code IN
                <foreach collection="advancedSearchArgs.priorityCode" item="priorityCode" open="(" separator=","
                         close=")">
                    #{priorityCode}
                </foreach>
            </if>
            <if test='advancedSearchArgs.statusCode != null and advancedSearchArgs.statusCode.size > 0'>
                AND ais.category_code IN
                <foreach collection="advancedSearchArgs.statusCode" item="statusCode" open="(" separator=","
                         close=")">
                    #{statusCode}
                </foreach>
            </if>
        </if>
        <if test='otherArgs != null'>
            <if test='otherArgs.component != null and otherArgs.component.size > 0'>
                AND ai.issue_id in (
                SELECT acir.issue_id FROM
                agile_component_issue_rel acir WHERE acir.component_id
                in
                <foreach collection="otherArgs.component" item="componentId" open="(" separator=","
                         close=")">
                    #{componentId}
                </foreach>
                )
            </if>
            <if test='otherArgs.version != null and otherArgs.version.size > 0'>
                AND ai.issue_id in (
                SELECT avir.issue_id FROM
                agile_version_issue_rel avir WHERE avir.version_id
                in
                <foreach collection="otherArgs.version" item="versionId" open="(" separator=","
                         close=")">
                    #{versionId}
                </foreach>
                )
            </if>
            <if test='otherArgs.sprint != null and otherArgs.sprint.size > 0'>
                AND ai.issue_id in (
                SELECT aisr.issue_id FROM
                agile_issue_sprint_rel aisr where aisr.sprint_id
                in
                <foreach collection="otherArgs.sprint" item="sprintId" open="(" separator=","
                         close=")">
                    #{sprintId}
                </foreach>
                )
            </if>
            <if test='otherArgs.label != null and otherArgs.label.size > 0'>
                AND ai.issue_id in (
                SELECT alir.issue_id FROM
                agile_label_issue_rel alir where alir.label_id
                in
                <foreach collection="otherArgs.label" item="labelId" open="(" separator=","
                         close=")">
                    #{labelId}
                </foreach>
                )
            </if>
            <if test='otherArgs.issueIds != null and otherArgs.issueIds.size > 0'>
                AND ai.issue_id in
                <foreach collection="otherArgs.issueIds" item="issueId" open="(" separator=","
                         close=")">
                    #{issueId}
                </foreach>
            </if>
        </if>
        )search where 1=1
        <if test='searchArgs != null'>
            <if test='searchArgs.issueNum != null and searchArgs.issueNum != ""'>
                AND position(#{searchArgs.issueNum} IN search.issue_num)
            </if>
        </if>
        <if test='content != null and content != ""'>
            AND (search.issue_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE CONCAT(CONCAT('%',
            #{content}), '%'))
        </if>
    </select>

    <select id="queryIssueNumByTimeSlot" resultType="io.choerodon.agile.infra.dataobject.IssueCreationNumDO">
        SELECT
            DATE_FORMAT(creation_date, '%Y-%m-%d') AS creation_day,
            COUNT(issue_id)                        AS issue_count
        FROM
            agile_issue
        WHERE
            project_id = #{projectId}
            AND type_code = #{typeCode}
            AND #{date} &lt;= creation_date
        GROUP BY
            DATE_FORMAT(creation_date, '%Y-%m-%d')
        ORDER BY
            creation_day
    </select>

    <select id="queryIssueWithNoCloseSprint" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT
            ai.issue_id,
            ai.type_code,
            sprint.sprint_id
        FROM
            agile_issue ai
            LEFT JOIN (
                          SELECT
                              aisr.issue_id,
                              asp.sprint_id
                          FROM
                              agile_issue_sprint_rel aisr
                              LEFT JOIN agile_sprint asp ON asp.sprint_id = aisr.sprint_id
                                                            AND asp.status_code != 'closed'
                      ) sprint ON sprint.issue_id = ai.issue_id
                                  AND sprint.sprint_id IS NOT NULL
        WHERE
            ai.issue_id = #{issueId}
    </select>

    <update id="batchUpdateSequence">
        UPDATE agile_issue
        SET epic_sequence = (epic_sequence + #{add})
        WHERE epic_sequence &gt;= #{sequence} AND project_id = #{projectId} AND type_code = 'issue_epic' and issue_id != #{issueId}
    </update>

    <select id="queryMaxEpicSequenceByProject" resultType="java.lang.Integer">
        SELECT ai.epic_sequence
        FROM
            agile_issue ai
        WHERE ai.project_id = #{projectId}
              AND ai.type_code = 'issue_epic'
        ORDER BY ai.epic_sequence DESC
        LIMIT 1;
    </select>

    <select id="issueStatistic" resultType="io.choerodon.agile.infra.dataobject.PieChartDO">
        select * from (
        SELECT
        <if test="type!=null and type!=''">
            <if test="type == 'component'">
                other.component_id AS type_name,
                otherName.name as name,
            </if>
            <if test="type == 'version'">
                other.version_id AS type_name,
                otherName.name as name,
            </if>
            <if test="type == 'label'">
                other.label_id AS type_name,
                otherName.label_name as name,
            </if>
        </if>
        count( * ) AS value
        FROM
        agile_issue ai
        <if test="type!=null and type!=''">
            <if test="type == 'component'">
                LEFT JOIN agile_component_issue_rel other on ai.issue_id = other.issue_id
                LEFT JOIN agile_issue_component otherName on other.component_id = otherName.component_id
            </if>
            <if test="type == 'version'">
                LEFT JOIN agile_version_issue_rel other on ai.issue_id = other.issue_id and other.relation_type = 'fix'
                LEFT JOIN agile_product_version otherName on other.version_id = otherName.version_id
            </if>
            <if test="type == 'label'">
                LEFT JOIN agile_label_issue_rel other on ai.issue_id = other.issue_id
                LEFT JOIN agile_issue_label otherName on other.label_id = otherName.label_id
            </if>
        </if>
        WHERE
        ai.project_id = #{projectId}
        <if test="issueTypes!=null and issueTypes.size > 0">
            <foreach collection="issueTypes" item="issueType">
                AND ai.type_code != #{issueType}
            </foreach>
        </if>
        <if test="type!=null and type!=''">
            GROUP BY
            <if test="type == 'component'">
                other.component_id
            </if>
            <if test="type == 'version'">
                other.version_id
            </if>
            <if test="type == 'label'">
                other.label_id
            </if>
        </if>
        )pieData ORDER BY pieData.value DESC
    </select>

    <select id="queryIssuesByStatusId" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT ai.issue_id,ai.status_id,ais.name as status_name
        FROM
            agile_issue ai left join agile_issue_status ais on ai.status_id = ais.id
        WHERE ai.status_id = #{statusId}
    </select>

    <select id="listIssuesByProjectIdSprint" resultType="io.choerodon.agile.infra.dataobject.StoryMapIssueDO">
        SELECT
            aisr.sprint_id,
            asp.sprint_name,
            ai.issue_id,
            ai.assignee_id,
            ai.priority_code,
            ai.summary,
            ai.type_code,
            ai.story_points,
            ai.epic_id,
            ai.object_version_number,
            CONCAT_WS(
                '-',
                api.project_code,
                ai.issue_num
            ) AS issue_num,
            ais.category_code AS  status_code,
            ais.`name` AS status_name
        FROM
            agile_issue_sprint_rel aisr
        LEFT JOIN agile_sprint asp ON aisr.sprint_id = asp.sprint_id
        LEFT JOIN agile_issue ai
        on ai.type_code NOT IN (
            'issue_test',
            'sub_task',
            'issue_epic'
        )
        <if test='onlyStory != null and onlyStory == true'>
            AND ai.type_code = 'story'
        </if>
        <if test='assigneeId != null'>
            AND ai.assignee_id = #{assigneeId}
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.id
        WHERE
            aisr.project_id =  #{projectId} and aisr.issue_id = ai.issue_id
        and aisr.sprint_id in (select sprint_id from agile_sprint where status_code != 'closed')
        <if test="pageType != null and pageType == 'storymap'">
            AND ai.epic_id IS NOT NULL AND ai.epic_id != 0
        </if>
        <if test="pageType != null and pageType == 'backlog'">
            AND (ai.epic_id IS NULL OR ai.epic_id = 0)
        </if>
        UNION ALL
            SELECT
                NULL,
                NULL,
                ai.issue_id,
                ai.assignee_id,
                ai.priority_code,
                ai.summary,
                ai.type_code,
                ai.story_points,
                ai.epic_id,
                ai.object_version_number,
                CONCAT_WS(
                    '-',
                    api.project_code,
                    ai.issue_num
                ) AS issue_num,
                ais.category_code AS  status_code,
                ais.`name` AS status_name
            FROM
                agile_issue ai
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
            LEFT JOIN agile_issue_status ais ON ai.status_id = ais.id
            WHERE
                ai.project_id =  #{projectId}
            AND issue_id NOT IN (
                SELECT
                    aisr.issue_id
                FROM
                    agile_issue_sprint_rel aisr, agile_sprint asp
                WHERE
                    aisr.project_id = #{projectId} and aisr.sprint_id = asp.sprint_id and asp.status_code != 'closed'
            )
            AND ai.type_code NOT IN (
                'issue_test',
                'sub_task',
                'issue_epic'
            )
            <if test="pageType != null and pageType == 'storymap'">
                AND ai.epic_id IS NOT NULL AND ai.epic_id != 0
            </if>
            <if test="pageType != null and pageType == 'backlog'">
                AND (ai.epic_id IS NULL OR ai.epic_id = 0)
            </if>
            <if test='onlyStory != null and onlyStory == true'>
                AND ai.type_code = 'story'
            </if>
            <if test='assigneeId != null'>
                AND ai.assignee_id = #{assigneeId}
            </if>
            <if test='filterSql != null'>
                AND ai.issue_id IN (${filterSql})
            </if>
    </select>
    

    <select id="listIssuesByProjectIdVersion" resultType="io.choerodon.agile.infra.dataobject.StoryMapIssueDO">
        SELECT
            avir.version_id,
            apv.`name` AS version_name,
            ai.issue_id,
            ai.assignee_id,
            ai.priority_code,
            ai.summary,
            ai.type_code,
            ai.story_points,
            ai.epic_id,
            ai.object_version_number,
            CONCAT_WS(
                '-',
                api.project_code,
                ai.issue_num
            ) AS issue_num,
            ais.category_code AS  status_code,
            ais.`name` AS status_name
        FROM
            agile_version_issue_rel avir
        LEFT JOIN agile_product_version apv ON avir.version_id = apv.version_id
        LEFT JOIN agile_issue ai ON
        ai.type_code NOT IN (
            'issue_test',
            'sub_task',
            'issue_epic'
        )
        <if test='onlyStory != null and onlyStory == true'>
            AND ai.type_code = 'story'
        </if>
        <if test='assigneeId != null'>
            AND ai.assignee_id = #{assigneeId}
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.id
        WHERE
            avir.project_id = #{projectId} and avir.issue_id = ai.issue_id
        and avir.version_id in (
           select version_id from agile_product_version where project_id = #{projectId} and status_code != 'archived'
        )
        <if test="pageType != null and pageType == 'storymap'">
            AND ai.epic_id IS NOT NULL AND ai.epic_id != 0
        </if>
        <if test="pageType != null and pageType == 'backlog'">
            AND (ai.epic_id IS NULL OR ai.epic_id = 0)
        </if>
        UNION ALL
            SELECT
                NULL,
                NULL,
                ai.issue_id,
                ai.assignee_id,
                ai.priority_code,
                ai.summary,
                ai.type_code,
                ai.story_points,
                ai.epic_id,
                ai.object_version_number,
                CONCAT_WS(
                    '-',
                    api.project_code,
                    ai.issue_num
                ) AS issue_num,
                ais.category_code AS  status_code,
                ais.`name` AS status_name
            FROM
                agile_issue ai
            LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
            LEFT JOIN agile_issue_status ais ON ai.status_id = ais.id
            WHERE
                ai.project_id = #{projectId}
            AND issue_id NOT IN (
                SELECT
                    avir.issue_id
                FROM
                    agile_version_issue_rel avir, agile_product_version apv
                WHERE
                    avir.project_id = #{projectId} and avir.version_id = apv.version_id and apv.status_code != 'archived'
            )
            AND ai.type_code NOT IN (
                'issue_test',
                'sub_task',
                'issue_epic'
            )
        <if test="pageType != null and pageType == 'storymap'">
            AND ai.epic_id IS NOT NULL AND ai.epic_id != 0
        </if>
        <if test="pageType != null and pageType == 'backlog'">
            AND (ai.epic_id IS NULL OR ai.epic_id = 0)
        </if>
        <if test='onlyStory != null and onlyStory == true'>
            AND ai.type_code = 'story'
        </if>
        <if test='assigneeId != null'>
            AND ai.assignee_id = #{assigneeId}
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
    </select>

    <select id="listIssuesByProjectIdNone" resultType="io.choerodon.agile.infra.dataobject.StoryMapIssueDO">
        SELECT
            ai.issue_id,
            ai.assignee_id,
            ai.priority_code,
            ai.summary,
            ai.type_code,
            ai.story_points,
            ai.epic_id,
            ai.object_version_number,
            CONCAT_WS(
                '-',
                api.project_code,
                ai.issue_num
            ) AS issue_num,
            ais.category_code AS  status_code,
            ais.`name` AS status_name
        FROM
            agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.id
        WHERE
            ai.project_id = #{projectId}
        AND ai.type_code NOT IN (
            'issue_test',
            'sub_task',
            'issue_epic'
        )
        <if test="pageType != null and pageType == 'storymap'">
            AND ai.epic_id IS NOT NULL AND ai.epic_id != 0
        </if>
        <if test="pageType != null and pageType == 'backlog'">
            AND (ai.epic_id IS NULL OR ai.epic_id = 0)
        </if>
        <if test='onlyStory != null and onlyStory == true'>
            AND ai.type_code = 'story'
        </if>
        <if test='assigneeId != null'>
            AND ai.assignee_id = #{assigneeId}
        </if>
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
    </select>

    <select id="queryIssueSprintByIssueId" resultType="io.choerodon.agile.infra.dataobject.IssueSprintDO">
        SELECT
            ai.issue_id,
            aisr.sprint_id
        FROM
            ( SELECT a.issue_id FROM agile_issue a WHERE a.issue_id IN
            <foreach collection="issueIds" item="issueId" open="(" separator=","
                     close=")">
               #{issueId}
            </foreach>
            AND a.project_id = #{projectId} ) ai
            LEFT JOIN agile_issue_sprint_rel aisr ON ai.issue_id = aisr.issue_id
            LEFT JOIN agile_sprint asw ON asw.sprint_id = aisr.sprint_id
            where asw.status_code != 'closed'
    </select>

</mapper>