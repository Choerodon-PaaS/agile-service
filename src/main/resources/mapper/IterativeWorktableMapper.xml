<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.IterativeWorktableMapper">

    <resultMap id="IssueTypeDistribute" type="io.choerodon.agile.infra.dataobject.IssueTypeDistributeDO">
        <id property="typeCode" column="type_code"/>
        <collection property="issueStatus" autoMapping="true" ofType="io.choerodon.agile.infra.dataobject.IssueStatus">
            <id property="issueNum" column="issue_num"/>
            <id property="categoryCode" column="category_code"/>
        </collection>
    </resultMap>

    <select id="queryPriorityDistribute" resultType="io.choerodon.agile.infra.dataobject.PriorityDistributeDO">
        SELECT ai.issue_id, ai.priority_code, ais.category_code
        from agile_issue_sprint_rel aisr, agile_issue ai, agile_issue_status ais
        where aisr.project_id = #{projectId}
            and aisr.sprint_id = #{sprintId}
            and aisr.issue_id = ai.issue_id
            and ai.type_code in ('story','task','bug','sub_task')
            and ai.status_id = ais.id
    </select>

    <select id="queryStatusCategoryDistribute" resultType="io.choerodon.agile.infra.dataobject.StatusCategoryDO">
        SELECT ais.category_code, count(ai.issue_id) as issue_num
        from agile_issue_sprint_rel aisr, agile_issue ai, agile_issue_status ais
        where aisr.project_id = #{projectId}
            and aisr.sprint_id = #{sprintId}
            and aisr.issue_id = ai.issue_id
            and ai.type_code in ('story','task','bug','sub_task')
            and ai.status_id = ais.id
            GROUP BY ais.category_code
    </select>

    <select id="queryAssigneeInfoBySprintId" resultType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
        SELECT case when ai.assignee_id is null then 0 else ai.assignee_id end AS assignee_id,
                   SUM(ai.story_points) AS total_story_points,
                   SUM(ai.remaining_time) AS total_remaining_time,
                   COUNT(ai.issue_id) AS issue_count
            FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
            WHERE aisr.project_id = #{projectId}
                and aisr.sprint_id = #{sprintId}
                and aisr.issue_id = ai.issue_id
                AND ai.status_id = ais.id
                AND ais.category_code != 'done'
                and ai.type_code in ('story','task','bug')
                GROUP BY ai.assignee_id

    </select>

    <select id="queryAssigneeAll" resultType="java.lang.Integer">
       select count(1) from agile_issue ai
       INNER JOIN
           (select issue_id from agile_issue_sprint_rel
            where project_id = #{projectId}
            and sprint_id = #{sprintId}) issues
        on ai.issue_id = issues.issue_id
        and ai.type_code in ('story','task','bug','sub_task')
    </select>

    <select id="queryAssigneeDistribute" resultType="io.choerodon.agile.infra.dataobject.AssigneeDistributeDO">
        select count(1) as issue_num,(count(1)/#{total})*100 as percent,ai.assignee_id
        from agile_issue ai
        INNER JOIN
            (select issue_id from agile_issue_sprint_rel
            where project_id = #{projectId}
            and sprint_id = #{sprintId}) issues
        on ai.issue_id = issues.issue_id
        and ai.type_code in ('story','task','bug','sub_task')
        GROUP BY ai.assignee_id
    </select>

    <select id="queryIssueTypeDistribute" resultMap="IssueTypeDistribute">
        SELECT count(1) AS issue_num,
            ai.type_code, ais.category_code
        FROM agile_issue ai, agile_issue_status ais,agile_issue_sprint_rel aisr
        WHERE aisr.project_id = #{projectId}
        AND aisr.sprint_id =  #{sprintId}
        AND ai.issue_id = aisr.issue_id
        AND ai.status_id = ais.id
        AND ai.type_code IN ('story','task','bug','sub_task')
        GROUP BY ai.type_code, ais.category_code
    </select>

</mapper>