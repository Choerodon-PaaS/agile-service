<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.agile.infra.mapper.ReportMapper">

    <resultMap id="versionIssue" type="io.choerodon.agile.infra.dataobject.VersionIssueChangeDO">
        <id property="changeDate" column="change_date"/>
        <collection property="issueIds" autoMapping="true" ofType="java.lang.Long">
            <id column="issue_id"/>
        </collection>
        <collection property="logIds" autoMapping="true" ofType="java.lang.Long">
            <id column="log_id"/>
        </collection>
        <collection property="addIssueIds" autoMapping="true" ofType="java.lang.Long">
            <id column="add_issue_id"/>
        </collection>
        <collection property="removeIssueIds" autoMapping="true" ofType="java.lang.Long">
            <id column="remove_issue_id"/>
        </collection>
    </resultMap>

    <select id="queryIssueIdsBeforeSprintStart" resultType="java.lang.Long">
        SELECT adl5.issue_id
        FROM agile_data_log adl5
        WHERE adl5.log_id IN (SELECT MAX(adl.log_id) AS log_id
                              FROM agile_data_log adl
                              WHERE adl.field = 'Sprint' AND adl.creation_date &lt;= #{sprintDO.startDate}
                              GROUP BY
                                  adl.issue_id) AND FIND_IN_SET(#{sprintDO.sprintId}, adl5.new_value)
        UNION
        SELECT aisr2.issue_id
        FROM
            agile_issue_sprint_rel aisr2
        WHERE
            aisr2.creation_date &lt;= #{sprintDO.startDate}
            AND aisr2.sprint_id = #{sprintDO.sprintId}
    </select>

    <select id="queryValueBeforeSprintStart" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        IFNULL(a.new_string,0) as new_value,
        d.issue_id,
        #{sprintDO.startDate} AS date,
        'startSprint' AS type,
        1 AS statistical,
        0 AS old_value,
        CONCAT_WS( '-', api.project_code, d.issue_num ) AS issue_num,
        CONCAT_WS( '-', api2.project_code, cd.issue_num ) AS parent_issue_num,
        cd.issue_id AS parent_issue_id
        FROM (
        SELECT
        ai.issue_id,
        ai.issue_num,
        ai.project_id,
        ai.parent_issue_id
        FROM
        agile_issue ai
        WHERE
        ai.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        ) d
        LEFT JOIN (
        select
        adl3.new_string,adl3.issue_id,adl3.creation_date
        from
        agile_data_log adl3 where adl3.log_id in (SELECT
        MAX(adl.log_id) as log_id
        FROM
        agile_data_log adl
        WHERE
        adl.field = #{field}
        AND adl.creation_date &lt; #{sprintDO.startDate}
        AND adl.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        GROUP BY
        adl.issue_id)
        ) a ON a.issue_id = d.issue_id
        LEFT JOIN agile_project_info api ON api.project_id = d.project_id
        left JOIN agile_issue cd on d.parent_issue_id = cd.issue_id LEFT JOIN agile_project_info api2 ON api2.project_id
        = cd.project_id
    </select>

    <select id="queryAddIssueIdsDuringSprint" resultType="java.lang.Long">
        SELECT DISTINCT adl2.issue_id
        FROM agile_data_log adl2
        WHERE
            adl2.field = 'Sprint' AND adl2.creation_date &gt; #{sprintDO.startDate} AND
            adl2.creation_date &lt;= #{sprintDO.actualEndDate}
            AND FIND_IN_SET(#{sprintDO.sprintId}, adl2.new_value) AND
            (FIND_IN_SET(#{sprintDO.sprintId}, adl2.old_value) IS NULL OR
             FIND_IN_SET(#{sprintDO.sprintId}, adl2.old_value) = 0)
            AND adl2.issue_id

    </select>

    <select id="queryAddIssueValueDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        select
        ifnull(bbb.new_value,0) AS new_value,
        bbb.issue_id as issue_id,
        bbb.date as date,
        0 as old_value,
        'addDuringSprint' as type,
        1 as statistical,
        CONCAT_WS('-', api.project_code, aaa.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when
        (
            SELECT CASE WHEN adl3.issue_id IS NOT NULL AND adl3.new_value IS NULL
            THEN 1
            ELSE 0 END
            FROM
            agile_data_log adl3
            WHERE
            adl3.issue_id = bbb.issue_id
            AND adl3.creation_date &lt; bbb.date
            AND adl3.field = 'resolution'
            ORDER BY adl3.creation_date DESC
            LIMIT 1
        ) is null then 1
        else
        (
            SELECT CASE WHEN adl3.issue_id IS NOT NULL AND adl3.new_value IS NULL
            THEN 1
            ELSE 0 END
            FROM
            agile_data_log adl3
            WHERE
            adl3.issue_id = bbb.issue_id
            AND adl3.creation_date &lt; bbb.date
            AND adl3.field = 'resolution'
            ORDER BY adl3.creation_date DESC
            LIMIT 1
        ) end as statistical
        from (
        SELECT
        adl.issue_id,
        adl.creation_date as date,
        (select adl2.new_string from agile_data_log adl2 where adl2.field = #{field} and adl2.issue_id =
        adl.issue_id and adl2.creation_date &lt; adl.creation_date order by adl2.creation_date desc limit 1) as
        new_value
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'Sprint'
        AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND FIND_IN_SET( #{sprintDO.sprintId}, adl.new_value )
        AND adl.issue_id IN
        <foreach collection="issueIdAddList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        )bbb left join agile_issue aaa on aaa.issue_id = bbb.issue_id LEFT JOIN agile_issue ai2 on aaa.parent_issue_id =
        ai2.issue_id LEFT JOIN
        agile_project_info api2
        ON api2.project_id = ai2.project_id LEFT JOIN
        agile_project_info api
        ON api.project_id = aaa.project_id
    </select>

    <select id="queryRemoveIssueIdsDuringSprintWithOutSubEpicIssue" resultType="java.lang.Long">
        SELECT DISTINCT ai.issue_id
        FROM (SELECT adl2.issue_id
              FROM agile_data_log adl2
              WHERE
                  adl2.field = 'Sprint' AND adl2.creation_date &gt; #{sprintDO.startDate} AND
                  adl2.creation_date &lt;= #{sprintDO.actualEndDate}
                  AND FIND_IN_SET(#{sprintDO.sprintId}, adl2.old_value) AND
                  (FIND_IN_SET(#{sprintDO.sprintId}, adl2.new_value) IS NULL OR
                   FIND_IN_SET(#{sprintDO.sprintId}, adl2.new_value) = 0)
                  AND adl2.issue_id NOT IN (SELECT ais.issue_id
                                            FROM agile_issue_sprint_rel ais
                                            WHERE ais.sprint_id = #{sprintDO.sprintId})) aa LEFT JOIN agile_issue ai
                ON ai.issue_id = aa.issue_id
        WHERE ai.type_code != 'sub_task'
    </select>

    <select id="queryIssueIdsBySprintId" resultType="java.lang.Long">
        SELECT aisr.issue_id
        FROM
            agile_issue_sprint_rel aisr
        WHERE
            aisr.sprint_id = #{sprintId}
    </select>

    <select id="queryRemoveIssueValueDurationSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        a.*,
        0 as new_value,
        'removeDuringSprint' as type,
        1 as statistical,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when (
            SELECT CASE WHEN adl3.issue_id IS NOT NULL AND adl3.new_value IS NULL
            THEN 1
            ELSE 0 END
            FROM
            agile_data_log adl3
            WHERE
            adl3.issue_id = a.issue_id
            AND adl3.creation_date &lt; a.date
            AND adl3.field = 'resolution'
            ORDER BY adl3.creation_date DESC
            LIMIT 1
        ) is null then 1
        else
            (
            SELECT CASE WHEN adl3.issue_id IS NOT NULL AND adl3.new_value IS NULL
            THEN 1
            ELSE 0 END
            FROM
            agile_data_log adl3
            WHERE
            adl3.issue_id = a.issue_id
            AND adl3.creation_date &lt; a.date
            AND adl3.field = 'resolution'
            ORDER BY adl3.creation_date DESC
            LIMIT 1
            ) end
        as statistical
        FROM
        (
        SELECT
        adl.issue_id,
        adl.creation_date as date,
        IFNULL((select adl2.new_string from agile_data_log adl2 where adl2.field = #{field} and adl2.issue_id =
        adl.issue_id and adl2.creation_date &lt; adl.creation_date order by adl2.creation_date desc limit 1) ,0)as
        old_value
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'Sprint'
        AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND FIND_IN_SET(#{sprintDO.sprintId},adl.old_value)
        AND
        (FIND_IN_SET(#{sprintDO.sprintId}, adl.new_value) IS NULL OR
        FIND_IN_SET(#{sprintDO.sprintId}, adl.new_value) = 0)
        AND adl.issue_id IN
        <foreach collection="issueIdRemoveList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        ) a LEFT JOIN agile_issue ai on ai.issue_id = a.issue_id LEFT JOIN agile_project_info api ON api.project_id =
        ai.project_id LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN agile_project_info api2
        ON api2.project_id =
        ai2.project_id
    </select>

    <select id="queryAddIssueDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        ai.issue_id,
        abd.date,
        'addDuringSprint' as type,
        0 as old_value,
        1 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,CONCAT_WS('-', api2.project_code,
        ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when
            (
                SELECT
                CASE
                WHEN
                adl2.issue_id IS NOT NULL
                AND adl2.new_value IS NULL THEN
                1 ELSE 0
                END
                FROM
                agile_data_log adl2
                WHERE
                adl2.issue_id = ai.issue_id
                AND adl2.creation_date &lt; abd.date
                 AND adl2.field = 'resolution'
                 ORDER BY
                 adl2.creation_date DESC
                 LIMIT 1
            ) is null then 1
        else
            (
                SELECT
                CASE
                WHEN
                adl2.issue_id IS NOT NULL
                AND adl2.new_value IS NULL THEN
                1 ELSE 0
                END
                FROM
                agile_data_log adl2
                WHERE
                adl2.issue_id = ai.issue_id
                AND adl2.creation_date &lt; abd.date
                AND adl2.field = 'resolution'
                ORDER BY
                adl2.creation_date DESC
                LIMIT 1
            )  end AS statistical
        FROM (SELECT
        adl.issue_id,
        adl.creation_date AS date
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'Sprint'
        AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND FIND_IN_SET(#{sprintDO.sprintId},adl.new_value)
        AND adl.issue_id IN
        <foreach collection="issueIdAddList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>)abd left join agile_issue ai on abd.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id =
        ai.project_id LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN agile_project_info api2
        ON api2.project_id =
        ai2.project_id
    </select>

    <select id="queryRemoveIssueDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        adl.issue_id,
        adl.creation_date AS date,
        'removeDuringSprint' as type,
        1 as old_value,
        0 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when
        (
            SELECT
            CASE
            WHEN
            adl2.issue_id IS NOT NULL
            AND adl2.new_value IS NULL THEN
            1 ELSE 0
            END
            FROM
            agile_data_log adl2
            WHERE
            adl2.issue_id = adl.issue_id
            AND adl2.creation_date &lt; adl.creation_date
            AND adl2.field = 'resolution'
            ORDER BY
            adl2.creation_date DESC
            LIMIT 1
        ) is null then 1
        else
            (
                SELECT
                CASE
                WHEN
                adl2.issue_id IS NOT NULL
                AND adl2.new_value IS NULL THEN
                1 ELSE 0
                END
                FROM
                agile_data_log adl2
                WHERE
                adl2.issue_id = adl.issue_id
                AND adl2.creation_date &lt; adl.creation_date
                AND adl2.field = 'resolution'
                ORDER BY
                adl2.creation_date DESC
                LIMIT 1
            ) end
        AS statistical
        FROM
        agile_data_log adl left join agile_issue ai on adl.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id = ai.project_id left join agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN
        agile_project_info api2 ON
        api2.project_id = ai2.project_id
        WHERE
        adl.field = 'Sprint'
        AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND FIND_IN_SET(#{sprintDO.sprintId},adl.old_value)
        AND adl.issue_id IN
        <foreach collection="issueIdRemoveList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryAddDoneIssueIdsDuringSprint" resultType="java.lang.Long">
        SELECT distinct adl.issue_id
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'resolution'
        AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND adl.new_value != ''
        AND
        adl.issue_id in
        <foreach collection="issueAllList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryRemoveDoneIssueIdsDuringSprint" resultType="java.lang.Long">
        SELECT distinct adl.issue_id
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'resolution'
        AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND adl.new_value is NULL
        and adl.issue_id in
        <foreach collection="issueAllList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryAddIssueDoneValueDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        a.*,
        0 as new_value,
        'addDoneDuringSprint' as type,
        case when FIND_IN_SET(#{sprintDO.sprintId}, (select adl3.new_value from agile_data_log adl3 where adl3.issue_id = a.issue_id and adl3.field = 'Sprint' and
        adl3.creation_date &lt; a.date order by adl3.log_id desc limit 1)) then 1 else 0 end as statistical,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_Id
        FROM
        (
        SELECT
        adl.issue_id,
        adl.creation_date as date,
        IFNULL((select adl2.new_string from agile_data_log adl2 where adl2.field = #{field} and adl2.issue_id =
        adl.issue_id and adl2.creation_date &lt; adl.creation_date order by adl2.creation_date desc limit 1) ,0)as
        old_value
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'resolution' AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND adl.new_value IS not null
        AND adl.issue_id IN
        <foreach collection="issueIdAddDoneList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        )a LEFT JOIN agile_issue ai on ai.issue_id = a.issue_id LEFT JOIN agile_project_info api ON
        api.project_id =
        ai.project_id LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN agile_project_info api2
        ON api2.project_id =
        ai2.project_id
    </select>

    <select id="queryRemoveIssueDoneValueDurationSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        a.*,
        0 as old_value,
        'removeDoneDuringSprint' as type,
        case when FIND_IN_SET(#{sprintDO.sprintId}, (select adl3.new_value from agile_data_log adl3 where adl3.issue_id = a.issue_id and adl3.field = 'Sprint' and
        adl3.creation_date &lt; a.date order by adl3.log_id desc limit 1)) then 1 else 0 end as statistical,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id
        FROM
        (
        select
        adl.issue_id,
        adl.creation_date as date,
        IFNULL((select adl2.new_string from agile_data_log adl2 where adl2.field = #{field} and adl2.issue_id =
        adl.issue_id and adl2.creation_date &lt; adl.creation_date order by adl2.creation_date desc limit 1) ,0)as
        new_value
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'resolution' AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND adl.new_value IS null
        AND adl.issue_id IN
        <foreach collection="issueIdRemoveDoneList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        ) a
        LEFT JOIN agile_issue ai on ai.issue_id = a.issue_id LEFT JOIN agile_project_info api ON api.project_id =
        ai.project_id LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN agile_project_info api2
        ON api2.project_id =
        ai2.project_id

    </select>

    <select id="queryDoneIssueIdsBeforeSprintStart" resultType="java.lang.Long">
        SELECT adl2.issue_id
        FROM
        agile_data_log adl2 where adl2.log_id in (
        SELECT
        MAX(adl.log_id) as log_id
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'resolution'
        AND adl.creation_date &lt; #{sprintDO.startDate}
        AND adl.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        GROUP BY
        adl.issue_id
        )
        AND adl2.new_value is not null
    </select>

    <select id="queryAddIssueDoneDetailDuringSprint" resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        adl.issue_id,
        adl.creation_date AS date,
        'addDoneDuringSprint' as type,
        1 as old_value,
        0 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when FIND_IN_SET(#{sprintDO.sprintId}, (select adl3.new_value from agile_data_log adl3 where adl3.issue_id = adl.issue_id and adl3.field = 'Sprint' and
        adl3.creation_date &lt; adl.creation_date order by adl3.log_id desc limit 1)) then 1 else 0 end as statistical
        FROM
        agile_data_log adl left join agile_issue ai on adl.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id = ai.project_id left join agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN
        agile_project_info api2 ON
        api2.project_id = ai2.project_id
        WHERE
        adl.field = 'resolution' AND adl.creation_date &gt; #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        AND adl.old_value is NULL
        AND adl.issue_id IN
        <foreach collection="issueIdAddDoneList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryRemoveIssueDoneDetailDurationSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        adl.issue_id,
        adl.creation_date AS date,
        'removeDoneDuringSprint' as type,
        0 as old_value,
        1 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        case when FIND_IN_SET(#{sprintDO.sprintId}, (select adl3.new_value from agile_data_log adl3 where adl3.issue_id = adl.issue_id and adl3.field = 'Sprint' and
        adl3.creation_date &lt; adl.creation_date order by adl3.log_id desc limit 1)) then 1 else 0 end as statistical
        FROM
        agile_data_log adl left join agile_issue ai on adl.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id = ai.project_id left join agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN
        agile_project_info api2 ON
        api2.project_id = ai2.project_id
        WHERE
        adl.field = 'resolution' AND adl.creation_date &gt;= #{sprintDO.startDate}
        AND adl.creation_date &lt;= #{sprintDO.actualEndDate}
        and adl.new_value is NULL
        AND adl.issue_id IN
        <foreach collection="issueIdRemoveDoneList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueChangeValueDurationSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        adl.issue_id,
        adl.creation_date AS date,
        ifnull(adl.old_string,0) as old_value,
        ifnull(adl.new_string,0) as new_value,
        'valueChange' AS type,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id as parent_issue_id,
        1 as statistical
        FROM
        agile_data_log adl left join agile_issue ai on adl.issue_id = ai.issue_id LEFT JOIN agile_project_info api ON
        api.project_id = ai.project_id left join agile_issue ai2 on ai.parent_issue_id = ai2.issue_id LEFT JOIN
        agile_project_info api2 ON
        api2.project_id = ai2.project_id
        WHERE adl.field = #{field} AND adl.creation_date &gt;
        #{sprintDO.startDate}
        AND adl.creation_date &lt; #{sprintDO.actualEndDate}
        AND adl.issue_id IN
        <foreach collection="issueAllList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryAddIssueBeforeDuringSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
        ai.issue_id,
        #{sprintDO.startDate} AS date,
        'startSprint' as type,
        0 as old_value,
        1 as new_value,
        CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
        ai2.issue_id AS parent_issue_id,
        1 as statistical
        FROM agile_issue ai LEFT JOIN agile_project_info api ON api.project_id = ai.project_id LEFT JOIN agile_issue ai2
        on ai.parent_issue_id = ai2.issue_id
        LEFT JOIN agile_project_info api2 ON api2.project_id = ai2.project_id
        WHERE ai.issue_id IN
        <foreach collection="issueIdList" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueCountAfterSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
            c.*,
            CONCAT_WS('-', api.project_code, ai.issue_num)   AS issue_num,
            CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
            ai2.issue_id                                     AS parent_issue_id,
            'endSprint'                                      AS type
        FROM
            (
                SELECT
                    aspr.issue_id,
                    IF
                    (cc.new_value IS NULL, 1, 0) AS statistical,
                    IF
                    (cc.new_value IS NULL, 0, 1) AS old_value,
                    IF
                    (cc.new_value IS NULL, 1, 0) AS new_value,
                    #{sprintDO.actualEndDate}    AS date
                FROM
                    agile_issue_sprint_rel aspr
                    LEFT JOIN (
                                  SELECT
                                      adl4.issue_id,
                                      adl4.new_value
                                  FROM agile_data_log adl4
                                  WHERE adl4.log_id IN
                                        (SELECT MAX(adl.log_id) AS log_id
                                         FROM agile_data_log adl
                                         WHERE adl.field = 'resolution'
                                               AND adl.creation_date &lt; #{sprintDO.actualEndDate}
                                         GROUP BY issue_id)
                              ) cc ON aspr.issue_id = cc.issue_id
                WHERE
                    aspr.sprint_id = #{sprintDO.sprintId}
            ) c
            LEFT JOIN agile_issue ai ON c.issue_id = ai.issue_id
            LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
            LEFT JOIN agile_issue ai2 ON ai.parent_issue_id = ai2.issue_id
            LEFT JOIN agile_project_info api2 ON api2.project_id = ai2.project_id
    </select>

    <select id="queryIssueValueAfterSprint"
            resultType="io.choerodon.agile.infra.dataobject.ReportIssueDO">
        SELECT
            c.*,
            CONCAT_WS('-', api.project_code, ai.issue_num)   AS issue_num,
            CONCAT_WS('-', api2.project_code, ai2.issue_num) AS parent_issue_num,
            ai2.issue_id                                     AS parent_issue_id,
            'endSprint'                                      AS type,
            IF
            (d.new_value IS NULL, 1, 0)                      AS statistical
        FROM
            (
                SELECT
                    aspr.issue_id,
                    IFNULL(cc.new_string, 0)  AS new_value,
                    0                         AS old_value,
                    #{sprintDO.actualEndDate} AS date
                FROM
                    agile_issue_sprint_rel aspr
                    LEFT JOIN (SELECT
                                   adl5.issue_id,
                                   adl5.new_string
                               FROM agile_data_log adl5
                               WHERE adl5.log_id IN (SELECT MAX(adl.log_id) AS log_id
                                                     FROM agile_data_log adl
                                                     WHERE adl.field = #{field}
                                                           AND adl.creation_date &lt; #{sprintDO.actualEndDate}
                                                     GROUP BY
                                                         adl.issue_id)) cc ON aspr.issue_id = cc.issue_id
                WHERE
                    aspr.sprint_id = #{sprintDO.sprintId}

            ) c
            LEFT JOIN (
                          SELECT
                              aspr1.issue_id,
                              cdc.new_value
                          FROM
                              agile_issue_sprint_rel aspr1
                              LEFT JOIN (SELECT
                                             adl7.new_value,
                                             adl7.issue_id
                                         FROM agile_data_log adl7
                                         WHERE adl7.log_id IN (SELECT MAX(adl1.log_id) AS log_id
                                                               FROM agile_data_log adl1
                                                               WHERE adl1.field = 'resolution'
                                                                     AND
                                                                     adl1.creation_date &lt; #{sprintDO.actualEndDate}
                                                               GROUP BY
                                                                   adl1.issue_id)) cdc ON
                                                                                           cdc.issue_id = aspr1.issue_id
                          WHERE
                              aspr1.sprint_id = #{sprintDO.sprintId}
                      ) d ON c.issue_id = d.issue_id
            LEFT JOIN agile_issue ai ON c.issue_id = ai.issue_id
            LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
            LEFT JOIN agile_issue ai2 ON ai.parent_issue_id = ai2.issue_id
            LEFT JOIN agile_project_info api2 ON api2.project_id = ai2.project_id
    </select>

    <select id="queryAddIssueDuringSprintNoData"
            resultType="java.util.Date">
        SELECT a.creation_date
        FROM agile_issue_sprint_rel a
        WHERE a.issue_id = #{issueId} AND a.sprint_id = #{sprintId}
    </select>

    <select id="queryReportIssueIds" resultType="java.lang.Long">
        SELECT
        ai.issue_id
        FROM agile_issue_sprint_rel aisr
        LEFT JOIN (
        SELECT adl.issue_id, adl.new_value, ais.is_completed
        FROM agile_data_log adl, agile_issue_status ais, (
        SELECT MAX(adl1.log_id) AS log_id
        FROM agile_issue_sprint_rel aisr1, agile_data_log adl1, agile_issue_status ais1
        WHERE aisr1.project_id = #{projectId} AND aisr1.sprint_id = #{sprintId}
        AND aisr1.issue_id = adl1.issue_id AND adl1.field = 'status'
        AND ais1.id = adl1.new_value AND ais1.is_completed IS NOT NULL
        AND adl1.creation_date > #{startDate}
        <if test="actualEndDate != null">
            AND adl1.creation_date &lt; #{actualEndDate}
        </if>
        GROUP BY adl1.issue_id
        ) a
        WHERE adl.log_id = a.log_id AND ais.id = adl.new_value
        ) adl2 ON adl2.issue_id = aisr.issue_id
        LEFT JOIN (
        SELECT adl.issue_id, adl.old_value, ais.is_completed
        from agile_data_log adl, agile_issue_status ais, (
        SELECT MIN(adl3.log_id) AS log_id
        FROM agile_issue_sprint_rel aisr2, agile_data_log adl3
        WHERE aisr2.project_id = #{projectId} AND aisr2.sprint_id = #{sprintId}
        AND aisr2.issue_id = adl3.issue_id AND adl3.field = 'status'
        <if test="actualEndDate != null">
            AND adl3.creation_date > #{actualEndDate}
        </if>
        GROUP BY adl3.issue_id
        ) a
        WHERE adl.log_id = a.log_id AND ais.id = adl.old_value
        ) adl4 ON adl4.issue_id = aisr.issue_id,
        agile_issue ai,agile_issue_status ais
        WHERE aisr.project_id = #{projectId} AND aisr.sprint_id = #{sprintId}
        AND aisr.issue_id = ai.issue_id AND ai.status_id = ais.id
        AND ai.type_code != 'sub_task'
        AND (adl2.new_value IS NOT null AND adl2.new_value != '' AND adl2.is_completed = ${status}
        OR (
        (adl2.new_value IS null OR adl2.new_value = '') AND adl4.old_value IS NOT null
        AND adl4.old_value != '' AND adl4.is_completed = ${status}
        )
        OR (
        (adl2.new_value IS null OR adl2.new_value = '') AND (adl4.old_value IS null OR adl4.old_value = '')
        AND ais.is_completed = ${status}
        )
        )
    </select>

    <select id="queryIssueByIssueIds" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code, ai.status_id,
        ais.name AS status_name,
        ais.category_code AS status_code,
        ai.summary, ai.priority_code,
        alv.name AS priority_name,
        ai.assignee_id, ai.project_id
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        , agile_issue_status ais
        WHERE ai.project_id = #{projectId} AND ai.status_id = ais.id
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueStoryPoints" resultType="io.choerodon.agile.infra.dataobject.SprintReportIssueStatusDO">
        SELECT adl.issue_id AS issue_id, adl.new_string AS story_points
        FROM agile_data_log adl, (
        SELECT MAX(log_id) AS log_id
        FROM agile_data_log
        WHERE project_id = #{projectId} AND field = 'Story Points'
        <if test="actualEndDate != null">
            AND creation_date &lt; #{actualEndDate}
        </if>
        AND issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        GROUP BY issue_id
        ) a
        WHERE adl.log_id = a.log_id
    </select>

    <select id="queryBeforeIssueStatus" resultType="io.choerodon.agile.infra.dataobject.SprintReportIssueStatusDO">
        SELECT adl.issue_id AS issue_id, ais.category_code AS category_code, ais.name AS status_name
        FROM agile_data_log adl,
        agile_issue_status ais,
        (
        SELECT MAX(adl1.log_id) AS log_id
        FROM agile_data_log adl1, agile_issue_status ais1
        WHERE adl1.project_id = #{projectId} AND adl1.field = 'status'
        AND ais1.id = adl1.new_value AND ais1.is_completed IS NOT NULL
        AND adl1.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        AND adl1.creation_date > #{startDate}
        <if test="actualEndDate != null">
            AND adl1.creation_date &lt; #{actualEndDate}
        </if>
        GROUP BY adl1.issue_id
        ) a
        WHERE adl.log_id = a.log_id AND ais.id = adl.new_value
    </select>

    <select id="queryAfterIssueStatus" resultType="io.choerodon.agile.infra.dataobject.SprintReportIssueStatusDO">
        SELECT adl.issue_id AS issue_id, ais.category_code AS category_code, ais.name AS status_name
        FROM agile_data_log adl,
        agile_issue_status ais,
        (
        SELECT MIN(log_id) AS log_id
        FROM agile_data_log
        WHERE project_id = #{projectId} AND field = 'status'
        AND issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        <if test="actualEndDate != null">
            AND creation_date > #{actualEndDate}
        </if>
        GROUP BY issue_id
        ) a
        WHERE adl.log_id = a.log_id AND ais.id = adl.old_value
    </select>

    <select id="queryAddIssueValueDuringSprintNoData" resultType="java.lang.Integer">
        SELECT IFNULL(adl2.new_string, 0) AS new_value
        FROM (SELECT MAX(adl.log_id) AS log_Id
              FROM agile_data_log adl
              WHERE adl.issue_id = #{issueId} AND adl.field = #{field}
                    AND adl.creation_date &lt;= #{date}
              GROUP BY adl.issue_id) cd LEFT JOIN agile_data_log adl2 ON cd.log_id = adl2.log_id
    </select>

    <select id="checkIssueDoneStatus" resultType="java.lang.Boolean">
        SELECT CASE WHEN c.issue_id IS NOT NULL AND new_value IS NULL
            THEN 1
               ELSE 0 END
        FROM (SELECT
                  bbb.issue_id,
                  bbb.new_value
              FROM (SELECT
                        adl.new_value,
                        adl.issue_id
                    FROM
                        agile_data_log adl
                    WHERE
                        adl.issue_id = #{issueId}
                        AND adl.creation_date &lt; #{date}
                        AND adl.field = 'resolution'
                    ORDER BY adl.creation_date DESC
                    LIMIT 1) bbb) c
    </select>

    <select id="checkIssueRemove" resultType="java.lang.Boolean">
        SELECT CASE
               WHEN c.issue_id IS NOT NULL AND FIND_IN_SET(#{sprintId}, c.new_value)
                   THEN 1
               ELSE 0 END
        FROM (SELECT
                  bbb.issue_id,
                  bbb.new_value
              FROM (SELECT
                        adl.new_value,
                        adl.issue_id
                    FROM
                        agile_data_log adl
                    WHERE
                        adl.issue_id = #{issueId}
                        AND adl.creation_date &lt;= #{date}
                        AND adl.field = 'Sprint'
                    ORDER BY adl.creation_date DESC
                    LIMIT 1) bbb) c
    </select>

    <select id="queryRemoveIssueIdsDuringSprint" resultType="java.lang.Long">
        SELECT DISTINCT adl2.issue_id
        FROM agile_data_log adl2
        WHERE
            adl2.field = 'Sprint' AND adl2.creation_date &gt; #{sprintDO.startDate} AND
            adl2.creation_date &lt;= #{sprintDO.actualEndDate}
            AND FIND_IN_SET(#{sprintDO.sprintId}, adl2.old_value) AND
            (FIND_IN_SET(#{sprintDO.sprintId}, adl2.new_value) IS NULL OR
             FIND_IN_SET(#{sprintDO.sprintId}, adl2.new_value) = 0)

    </select>


    <select id="queryAllIssueIdsByFilter" resultType="java.lang.Long">
        select ai.issue_id from agile_issue ai LEFT JOIN agile_issue ai2 on ai.parent_issue_id = ai2.issue_id where
        ai.project_id = #{projectId}
        AND ai.type_code != 'issue_test' AND (ai2.type_code != "issue_test" or ai2.type_code is null)
        <if test='filterSql != null'>
            AND ai.issue_id IN (${filterSql})
        </if>
    </select>

    <select id="queryAddIssueDuringDate" resultType="io.choerodon.agile.infra.dataobject.ColumnChangeDO">
        SELECT
        abb.*,
        ( SELECT abcsr.column_id FROM agile_board_column_status_rel abcsr WHERE abcsr.status_id = abb.status_to AND
        abcsr.column_id IN
        <foreach collection="columnIds" item="columnId"
                 open="(" close=")" separator=",">
            #{columnId}
        </foreach>
        ) AS column_to,
        0 AS column_from
        FROM
        (
        SELECT
        ai.issue_id,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
        ai.creation_date AS date,
        (
        SELECT
        adl.old_value
        FROM
        agile_data_log adl
        WHERE
        adl.field = 'status'
        AND adl.issue_id = ai.issue_id
        ORDER BY
        adl.creation_date ASC
        LIMIT 1
        ) AS status_to
        FROM
        agile_issue ai
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        WHERE
        ai.issue_id IN
        <foreach collection="allIssueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        AND ai.creation_date &gt;= #{startDate}
        AND ai.creation_date &lt;= #{endDate}
        ) abb
    </select>


    <select id="queryChangeIssueDuringDate" resultType="io.choerodon.agile.infra.dataobject.ColumnChangeDO">
        SELECT a.* from (SELECT
        adl.issue_id,
        CONCAT_WS( '-', api.project_code, ai.issue_num ) AS issue_num,
        ifnull(abcsr.column_id,0) AS column_from,
        ifnull(abcsr2.column_id,0) AS column_to,
        adl.new_value AS status_to,
        adl.creation_date AS date
        FROM
        agile_data_log adl
        LEFT JOIN agile_board_column_status_rel abcsr ON abcsr.status_id = adl.old_value and abcsr.column_id in
        <foreach collection="columnIds" item="columnId"
                 open="(" close=")" separator=",">
            #{columnId}
        </foreach>
        LEFT JOIN agile_board_column_status_rel abcsr2 ON abcsr2.status_id = adl.new_value and abcsr2.column_id in
        <foreach collection="columnIds" item="columnId"
                 open="(" close=")" separator=",">
            #{columnId}
        </foreach>
        LEFT JOIN agile_issue ai ON ai.issue_id = adl.issue_id
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        WHERE
        adl.field = 'status'
        AND adl.issue_id IN
        <foreach collection="allIssueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        AND adl.creation_date &gt;= #{startDate}
        AND adl.creation_date &lt;= #{endDate})a WHERE a.column_from != a.column_to and a.column_to!=0

    </select>

    <select id="queryReportIssues" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code, alv1.name AS type_name,
        ai.status_id, ais.name AS status_name,
        ais.category_code AS status_code,
        ai.summary, ai.priority_code,
        alv.name AS priority_name,
        ai.assignee_id, ai.project_id,
        ai1.epic_name, ai.story_points,
        ai.remaining_time
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN agile_lookup_value alv1 ON ai.type_code = alv1.value_code
        LEFT JOIN agile_issue ai1 ON ai.epic_id = ai1.issue_id
        , agile_version_issue_rel avir, agile_issue_status ais
        WHERE avir.project_id = #{projectId} AND avir.version_id = #{versionId}
        AND avir.issue_id = ai.issue_id AND ai.status_id = ais.id
        <choose>
            <when test='status == "done"'>
                AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story') AND ais.is_completed = TRUE
            </when>
            <when test='status == "unfinished" and type == "storyPoints"'>
                AND ais.is_completed = FALSE AND ((ai.type_code = 'story' AND ai.story_points IS NOT NULL)
                OR ai.type_code IN ('task', 'bug', 'issue_epic'))
            </when>
            <when test='status == "unfinished" and type == "remainingEstimatedTime"'>
                AND ais.is_completed = FALSE AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
                AND ai.remaining_time IS NOT NULL
            </when>
            <when test='status == "unfinished" and type == "issueCount"'>
                AND ais.is_completed = FALSE AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
            </when>
            <when test='status == "unfinishedUnestimated" and type == "storyPoints"'>
                AND ais.is_completed = FALSE AND ai.type_code = 'story'
                AND ai.story_points IS NULL
            </when>
            <when test='status == "unfinishedUnestimated" and type == "remainingEstimatedTime"'>
                AND ais.is_completed = FALSE AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
                AND ai.remaining_time IS NULL
            </when>
            <otherwise>
                AND FALSE
            </otherwise>
        </choose>
    </select>

    <select id="queryChangeIssue" resultMap="versionIssue">
        SELECT
            adl.creation_date AS change_date,
            a.issue_id        AS add_issue_id,
            b.issue_id        AS remove_issue_id,
            NULL              AS issue_id,
            adl.log_id        AS log_id
        FROM agile_data_log adl
            LEFT JOIN (SELECT
                           creation_date,
                           issue_id
                       FROM agile_data_log
                       WHERE project_id = #{projectId}
                             AND field = 'Fix Version'
                             AND creation_date >= #{startDate}
                             AND creation_date &lt;= #{endDate}
                             AND new_value = #{versionId}
                      ) a ON a.creation_date = adl.creation_date
            LEFT JOIN (SELECT
                           creation_date,
                           issue_id
                       FROM agile_data_log
                       WHERE project_id = #{projectId}
                             AND field = 'Fix Version'
                             AND creation_date >= #{startDate}
                             AND creation_date &lt;= #{endDate}
                             AND old_value = #{versionId}
                      ) b ON b.creation_date = adl.creation_date
            ,
            agile_issue ai
        WHERE adl.project_id = #{projectId}
              AND adl.issue_id = ai.issue_id
              AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
              AND adl.field = 'Fix Version'
              AND adl.creation_date >= #{startDate}
              AND adl.creation_date &lt;= #{endDate}
              AND (adl.new_value = #{versionId} OR adl.old_value = #{versionId})
        ORDER BY adl.creation_date DESC
    </select>

    <select id="queryIssueIdByVersionId" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_version_issue_rel avir, agile_issue ai
        WHERE avir.project_id = #{projectId} AND avir.version_id = #{versionId} AND avir.relation_type = 'fix'
              AND ai.issue_id = avir.issue_id AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
    </select>

    <select id="queryChangeFieldIssue" resultType="io.choerodon.agile.infra.dataobject.IssueChangeDO">
        SELECT adl.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        adl.old_string AS old_value, adl.new_string AS new_value,
        adl.creation_date AS change_date, IFNULL(adl.new_string, 0) - IFNULL(adl.old_string, 0) AS change_field,
        ai.type_code AS type_code, IFNULL(b.completed, FALSE) AS completed
        FROM agile_data_log adl
        LEFT JOIN agile_issue ai ON ai.issue_id = adl.issue_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN (
        SELECT adl1.issue_id, ais.is_completed AS completed,
        a.change_date AS change_date
        FROM agile_data_log adl1
        LEFT JOIN agile_issue_status ais ON ais.id = adl1.new_value,
        (
        <foreach collection="versionIssues" item="versionIssue"
                 open="" close="" separator=" UNION ALL  ">
            SELECT MAX(log_id) AS log_id, #{versionIssue.changeDate} AS change_date
            FROM agile_data_log
            WHERE project_id = #{projectId} AND field = 'resolution'
            AND creation_date &lt;= #{versionIssue.changeDate}
            AND issue_id IN
            <foreach collection="versionIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            GROUP BY issue_id
        </foreach>
        )a
        WHERE adl1.log_id = a.log_id
        ) b ON b.change_date = adl.creation_date AND b.issue_id= adl.issue_id
        WHERE adl.project_id = #{projectId} AND adl.field = #{field}
        AND (
        <foreach collection="versionIssues" item="versionIssue"
                 open="(" close=")" separator=" OR ">
            ( adl.creation_date &lt; #{versionIssue.changeDate} AND adl.creation_date >= #{versionIssue.preDate}
            AND adl.issue_id IN
            <foreach collection="versionIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            )
        </foreach>
        )
    </select>

    <select id="queryCompletedChangeIssue" resultMap="versionIssue">
        SELECT adl.issue_id, adl.creation_date AS change_date,
        NULL AS add_issue_id, NULL AS remove_issue_id,
        adl.log_id AS log_id
        FROM agile_data_log adl
        LEFT JOIN agile_issue_status ais ON
        <if test="completed == true">
            ais.id = adl.new_value
        </if>
        <if test="completed == false">
            ais.id = adl.old_value
        </if>
        WHERE adl.project_id = #{projectId} AND adl.field = 'resolution'
        AND ais.is_completed = TRUE
        AND (
        <foreach collection="versionIssues" item="versionIssue"
                 open="(" close=")" separator=" OR ">
            ( adl.creation_date &lt; #{versionIssue.changeDate} AND adl.creation_date >= #{versionIssue.preDate}
            AND adl.issue_id IN
            <foreach collection="versionIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            )
        </foreach>
        )
    </select>

    <select id="queryChangIssue" resultType="io.choerodon.agile.infra.dataobject.IssueChangeDO">
        SELECT adl.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        b.old_value AS old_value, b.new_value AS new_value,
        adl.creation_date AS change_date, ai.type_code AS type_code,
        IFNULL(b1.completed, FALSE) AS completed
        FROM agile_data_log adl
        LEFT JOIN agile_issue ai ON ai.issue_id = adl.issue_id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN (
        SELECT adl1.issue_id, adl1.old_string AS old_value,
        adl1.new_string AS new_value, a.change_date AS change_date
        FROM agile_data_log adl1,
        (
        <foreach collection="changeIssues" item="changeIssue"
                 open="" close="" separator=" UNION ALL  ">
            SELECT MAX(log_id) AS log_id, #{changeIssue.changeDate} AS change_date
            FROM agile_data_log
            WHERE project_id = #{projectId} AND field = #{field}
            AND creation_date &lt;= #{changeIssue.changeDate}
            AND issue_id IN
            <foreach collection="changeIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            GROUP BY issue_id
        </foreach>
        )a
        WHERE adl1.log_id = a.log_id
        ) b ON b.change_date = adl.creation_date AND b.issue_id= adl.issue_id
        LEFT JOIN (
        SELECT adl1.issue_id, ais.is_completed AS completed,
        a.change_date AS change_date
        FROM agile_data_log adl1
        LEFT JOIN agile_issue_status ais ON ais.id = adl1.new_value,
        (
        <foreach collection="changeIssues" item="changeIssue"
                 open="" close="" separator=" UNION ALL  ">
            SELECT MAX(log_id) AS log_id, #{changeIssue.changeDate} AS change_date
            FROM agile_data_log
            WHERE project_id = #{projectId} AND field = 'resolution'
            AND creation_date &lt;= #{changeIssue.changeDate}
            AND issue_id IN
            <foreach collection="changeIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            GROUP BY issue_id
        </foreach>
        )a
        WHERE adl1.log_id = a.log_id
        ) b1 ON b1.change_date = adl.creation_date AND b1.issue_id= adl.issue_id
        WHERE adl.project_id = #{projectId}
        AND (
        <foreach collection="changeIssues" item="changeIssue"
                 open="(" close=")" separator=" OR ">
            ( adl.creation_date = #{changeIssue.changeDate}
            AND adl.log_id IN
            <foreach collection="changeIssue.logIds" item="logId"
                     open="(" close=")" separator=",">
                #{logId}
            </foreach>
            AND adl.issue_id IN
            <foreach collection="changeIssue.issueIds" item="issueId"
                     open="(" close=")" separator=",">
                #{issueId}
            </foreach>
            )
        </foreach>
        )
    </select>

    <select id="queryTotalField" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(${field}),0)
        FROM agile_issue
        WHERE project_id = #{projectId}
        <if test='field == "story_points"'>
            AND type_code = 'story'
        </if>
        <if test='field == "remaining_time"'>
            AND type_code IN ('task', 'bug', 'issue_epic', 'story')
        </if>
        AND issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryCompleteField" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(ai.${field}),0)
        FROM agile_issue ai
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
        WHERE ai.project_id = #{projectId} AND ais.is_completed = TRUE
        <if test='field == "story_points"'>
            AND ai.type_code = 'story'
        </if>
        <if test='field == "remaining_time"'>
            AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story')
        </if>
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryUnEstimateCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
        WHERE ai.project_id = #{projectId} AND ais.is_completed = FALSE
        <if test='field == "story_points"'>
            AND ai.type_code = 'story' AND ai.story_points IS NULL
        </if>
        <if test='field == "remaining_time"'>
            AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story') AND ai.remaining_time IS NULL
        </if>
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryCompletedIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
        WHERE ai.project_id = #{projectId} AND ais.is_completed = TRUE
        AND ai.type_code IN ('task', 'bug', 'issue_epic', 'story') AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>


    <select id="selectByIssueCountCommitted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
            aisr.sprint_id,
            aisr.issue_id
        FROM
          agile_issue_sprint_rel aisr
        WHERE aisr.project_id = #{projectId}
    </select>

    <select id="selectByIssueCountCompleted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
            aisr.sprint_id,
            aisr.issue_id
        FROM
        agile_issue_sprint_rel aisr,
        (
            SELECT
                t2.sprint_id,
                t2.issue_id,
                IF(adl2.new_value IS NULL,0 ,1) AS completed
            FROM
            agile_data_log adl2,
            (
                SELECT
                    aisr.sprint_id,
                    aisr.issue_id,
                    max(adl1.log_id) AS log_id
                FROM
                    agile_issue_sprint_rel aisr,
                    agile_sprint asp,
                    agile_data_log adl1
                WHERE
                    aisr.project_id = #{projectId}
                    AND aisr.sprint_id = asp.sprint_id
                    AND adl1.project_id = #{projectId}
                    AND aisr.issue_id = adl1.issue_id
                    AND adl1.field = 'resolution'
                    AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
                GROUP BY aisr.sprint_id, aisr.issue_id
        ) t2
        WHERE
            adl2.project_id = #{projectId}
            AND adl2.log_id = t2.log_id
        ) t3
        WHERE
            aisr.project_id = #{projectId}
            AND aisr.sprint_id = t3.sprint_id
            AND aisr.issue_id = t3.issue_id
            AND t3.completed = 1
    </select>


    <select id="selectByStoryPointAndNumCommitted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
        t1.sprint_id,
        t1.issue_id,
        IFNULL(adl.new_string,0) AS story_point
        FROM
        agile_data_log adl,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'Story Points'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id
        ) t1
        WHERE
        adl.project_id = #{projectId}
        AND adl.log_id = t1.log_id
        AND t1.sprint_id IN
        <foreach collection="ids" item="id"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="selectByStoryPointAndNumCompleted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
        t1.sprint_id,
        t1.issue_id,
        IFNULL(adl.new_string,0) AS story_point
        FROM
        agile_data_log adl,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'Story Points'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id
        ) t1,
        (
        SELECT
        t2.sprint_id,
        t2.issue_id,
        IF(adl2.new_value IS NULL,0 ,1) AS completed
        FROM
        agile_data_log adl2,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'resolution'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id
        ) t2
        WHERE
        adl2.project_id = #{projectId}
        AND adl2.log_id = t2.log_id
        ) t3
        WHERE
        adl.project_id = #{projectId}
        AND adl.log_id = t1.log_id
        AND t1.sprint_id = t3.sprint_id
        AND adl.issue_id = t3.issue_id
        AND t3.completed = 1
        AND t1.sprint_id IN
        <foreach collection="ids" item="id"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>


    <select id="selectByRemainTimeCommitted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
        t1.sprint_id,
        t1.issue_id,
        adl.new_value + IFNULL(t5.work_times,0) AS remain_time
        FROM
        agile_data_log adl,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'timeestimate'
        AND adl1.last_update_date &lt;= IF(asp.actual_end_date IS NULL,#{now}, asp.actual_end_date)
        GROUP BY
        aisr.sprint_id,
        aisr.issue_id
        ) t1
        LEFT JOIN (
        SELECT t4.sprint_id,t4.issue_id,SUM(adlf.new_value) AS work_times FROM agile_data_log adlf,
        (SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'timespent'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id) t4 WHERE adlf.project_id = #{projectId} AND adlf.log_id = t4.log_id
        GROUP BY t4.sprint_id,t4.issue_id
        ) t5 ON t1.sprint_id = t5.sprint_id AND t1.issue_id = t5.issue_id
        WHERE
        adl.project_id = #{projectId}
        AND adl.log_id = t1.log_id
        AND t1.sprint_id IN
        <foreach collection="ids" item="id"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="selectByRemainTimeCompleted" resultType="io.choerodon.agile.infra.dataobject.VelocitySingleDO">
        SELECT
        t1.sprint_id,
        t1.issue_id,
        adl.new_value + IFNULL(t5.work_times,0) AS remain_time
        FROM
        agile_data_log adl,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'timeestimate'
        AND adl1.last_update_date &lt;= IF(asp.actual_end_date IS NULL,#{now}, asp.actual_end_date)
        GROUP BY
        aisr.sprint_id,
        aisr.issue_id
        ) t1
        LEFT JOIN (
        SELECT t4.sprint_id,t4.issue_id,SUM(adlf.new_value) AS work_times FROM agile_data_log adlf,
        (SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'timespent'
        AND adl1.last_update_date &lt;= IF (asp.actual_end_date IS NULL, #{now}, asp.actual_end_date)
        GROUP BY aisr.sprint_id, aisr.issue_id) t4 WHERE adlf.project_id = #{projectId} AND adlf.log_id = t4.log_id
        GROUP BY t4.sprint_id,t4.issue_id
        ) t5 ON t1.sprint_id = t5.sprint_id AND t1.issue_id = t5.issue_id,
        (
        SELECT
        t2.sprint_id,
        t2.issue_id,
        IF (adl2.new_value IS NULL, 0, 1) AS completed
        FROM
        agile_data_log adl2,
        (
        SELECT
        aisr.sprint_id,
        aisr.issue_id,
        max(adl1.log_id) AS log_id
        FROM
        agile_issue_sprint_rel aisr,
        agile_sprint asp,
        agile_data_log adl1
        WHERE
        aisr.project_id = #{projectId}
        AND aisr.sprint_id = asp.sprint_id
        AND adl1.project_id = #{projectId}
        AND aisr.issue_id = adl1.issue_id
        AND adl1.field = 'resolution'
        AND adl1.last_update_date &lt;=IF (asp.actual_end_date IS NULL, #{now},asp.actual_end_date)
        GROUP BY
        aisr.sprint_id,
        aisr.issue_id
        ) t2
        WHERE
        adl2.project_id = #{projectId}
        AND adl2.log_id = t2.log_id
        ) t3
        WHERE
        adl.project_id = #{projectId}
        AND adl.log_id = t1.log_id
        AND t1.sprint_id = t3.sprint_id
        AND adl.issue_id = t3.issue_id
        AND t3.completed = 1
        AND t1.sprint_id IN
        <foreach collection="ids" item="id"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>


    <select id="selectRecentSprint" resultType="io.choerodon.agile.infra.dataobject.VelocitySprintDO">
        SELECT
            sprint_id,
            sprint_name
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
        ORDER BY sprint_id DESC
        LIMIT 7
    </select>

    <select id="selectCompletedIssueIds" resultType="io.choerodon.agile.infra.dataobject.DateIssueIdsDO">
        SELECT
          DATE_FORMAT(adl3.last_update_date,'%Y-%m-%d') AS group_day,
            adl3.issue_id,
          IF(adl3.new_string IS NOT NULL, 1, 0) AS completed
        FROM
            agile_data_log adl3
        WHERE
            project_id = #{projectId}
        AND adl3.log_id IN (
            SELECT
                MAX(adl2.log_id) AS log_id
            FROM
                agile_data_log adl2
            WHERE
                adl2.project_id = #{projectId}
            AND adl2.field = 'resolution'
            GROUP BY
                DATE_FORMAT(adl2.last_update_date,'%Y-%m-%d'),adl2.issue_id
        )
        ORDER BY DATE_FORMAT(last_update_date,'%Y-%m-%d')
    </select>

    <select id="selectStoryPointsAll" resultType="io.choerodon.agile.infra.dataobject.DateIssueIdsDO">
        SELECT
            DATE_FORMAT(
                last_update_date,
                '%Y-%m-%d'
            ) AS group_day,
          issue_id,
          new_string AS story_point
        FROM
            agile_data_log
        WHERE
            log_id IN (
                SELECT
                    MAX(adl.log_id) AS log_id
                FROM
                    agile_data_log adl
                WHERE
                    adl.field = 'Story Points'
                AND adl.project_id = #{projectId}
                GROUP BY
                    DATE_FORMAT(
                        adl.last_update_date,
                        '%Y-%m-%d'
                    ),
                    adl.issue_id
            )
        ORDER BY DATE_FORMAT(last_update_date,'%Y-%m-%d')
    </select>

    <select id="queryPieChartByParam" resultType="io.choerodon.agile.infra.dataobject.PieChartDO">
        select *,(pieData.value/#{total})*100 as percent from (
        SELECT
        <choose>
            <when test="own">
                ai.${fieldName} AS type_name,
                <if test="typeCode">
                    alv.name AS name,
                </if>
                <if test="fieldName == 'epic_id'">
                    ai2.epic_name AS name,
                </if>
                <if test="fieldName == 'status_id'">
                    ais.name AS name,
                </if>
            </when>
            <otherwise>
                <if test="fieldName == 'resolution'">
                    other.is_completed AS type_name,
                    ( CASE other.is_completed
                    WHEN 0 THEN '未解决'
                    WHEN 1 THEN '解决'
                    ELSE NULL
                    END) AS name,
                </if>
                <if test="fieldName == 'component_id' or fieldName == 'version_id'">
                    other.${fieldName} AS type_name,
                    otherName.name as name,
                </if>
                <if test="fieldName == 'sprint_id'">
                    other.${fieldName} AS type_name,
                    otherName.sprint_name as name,
                </if>
            </otherwise>
        </choose>
        count( * ) AS value
        FROM
        agile_issue ai
        <if test="typeCode!=null and typeCode!=''">
            LEFT JOIN agile_lookup_value alv on ai.${fieldName} = alv.value_code
        </if>
        <if test="fieldName == 'status_id'">
            LEFT JOIN agile_issue_status ais on ais.id = ai.${fieldName}
        </if>
        <if test="fieldName == 'epic_id'">
            LEFT JOIN agile_issue ai2 on ai2.issue_id = ai.${fieldName}
        </if>
        <if test="!own">
            <if test="fieldName == 'resolution'">
                LEFT JOIN agile_issue_status other on ai.status_id = other.id
            </if>
            <if test="fieldName == 'component_id'">
                LEFT JOIN agile_component_issue_rel other on ai.issue_id = other.issue_id
                LEFT JOIN agile_issue_component otherName on other.${fieldName} = otherName.${fieldName}
            </if>
            <if test="fieldName == 'version_id'">
                LEFT JOIN agile_version_issue_rel other on ai.issue_id = other.issue_id and other.relation_type = 'fix'
                LEFT JOIN agile_product_version otherName on other.${fieldName} = otherName.${fieldName}
            </if>
            <if test="fieldName == 'sprint_id'">
                LEFT JOIN agile_issue_sprint_rel other on ai.issue_id = other.issue_id
                LEFT JOIN agile_sprint otherName on other.${fieldName} = otherName.${fieldName}
            </if>
        </if>
        LEFT JOIN agile_issue ai3 on ai.parent_issue_id = ai3.issue_id
        WHERE
        ai.project_id = #{projectId}
        AND ai.type_code != 'issue_test'
        AND (ai3.type_code != 'issue_test' or ai3.type_code is null)
        <if test="fieldName == 'epic_id'">
            AND ai.type_code != "issue_epic"
        </if>
        GROUP BY
        <choose>
            <when test="own">
                ai.${fieldName}
            </when>
            <otherwise>
                <choose>
                    <when test="fieldName == 'resolution'">
                        other.is_completed
                    </when>
                    <otherwise>
                        other.${fieldName}
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
        )pieData ORDER BY pieData.value DESC
    </select>

    <select id="queryIssueCountByFieldName" resultType="java.lang.Integer">
        SELECT count(*)
        FROM
        agile_issue ai
        <if test="fieldName == 'component_id'">
            left join agile_component_issue_rel other on ai.issue_id = other.issue_id
        </if>
        <if test="fieldName == 'version_id'">
            LEFT JOIN agile_version_issue_rel other on ai.issue_id = other.issue_id and other.relation_type = 'fix'
        </if>
        <if test="fieldName == 'sprint_id'">
            LEFT JOIN agile_issue_sprint_rel other on ai.issue_id = other.issue_id
        </if>
        WHERE
        ai.project_id = #{projectId}
        AND type_code != "issue_test"
        <if test="fieldName == 'epic_id'">
            AND type_code != "issue_epic"
        </if>
    </select>

    <select id="selectIssueByEpicId" resultType="io.choerodon.agile.infra.dataobject.DateIssueIdsDO">
        SELECT
            DATE_FORMAT(
                adw.last_update_date,
                '%Y-%m-%d'
            ) AS group_day,
            adw.issue_id
        FROM
            agile_data_log adw, agile_issue ai
        WHERE
            log_id IN (
                SELECT
                    MAX(adl.log_id) AS log_id
                FROM
                    agile_data_log adl
                WHERE
                    adl.field = 'Epic Link'
                AND adl.project_id = #{projectId} AND (adl.old_value = #{epicId} OR adl.new_value = #{epicId})
                GROUP BY
                    DATE_FORMAT(
                        adl.last_update_date,
                        '%Y-%m-%d'
                    ),
                    adl.issue_id
            )
            AND adw.new_value is not NULL
            AND adw.issue_id = ai.issue_id
            AND ai.type_code != 'issue_test'
        ORDER BY
            DATE_FORMAT(
                adw.last_update_date,
                '%Y-%m-%d'
            )
    </select>

    <select id="selectIssueByVersionId" resultType="io.choerodon.agile.infra.dataobject.DateIssueIdsDO">
        SELECT
            DATE_FORMAT(
            adw.last_update_date,
            '%Y-%m-%d'
            ) AS group_day,
            adw.issue_id
        FROM
            agile_data_log adw, agile_issue ai
        WHERE
        log_id IN (
            SELECT
              MAX(adl.log_id) AS log_id
            FROM
              agile_data_log adl
            WHERE
                adl.field = 'Fix Version'
                AND adl.project_id = #{projectId} AND (adl.old_value = #{versionId} OR adl.new_value = #{versionId})
            GROUP BY
                DATE_FORMAT(
                adl.last_update_date,
                '%Y-%m-%d'
                ),
                adl.issue_id
        )
        AND adw.new_value is not NULL
        AND adw.issue_id = ai.issue_id
        AND ai.type_code != 'issue_test'
        ORDER BY
            DATE_FORMAT(
            adw.last_update_date,
            '%Y-%m-%d'
            )
    </select>

    <select id="selectEpicRemainTime" resultType="io.choerodon.agile.infra.dataobject.DateIssueIdsDO">
        SELECT
            DATE_FORMAT(
                last_update_date,
                '%Y-%m-%d'
            ) AS group_day,
            issue_id,
            SUM(new_value) AS remain_time
        FROM
            agile_data_log
        WHERE
            log_id IN (
                SELECT
                    MAX(adl.log_id) AS log_id
                FROM
                    agile_data_log adl
                WHERE
                    adl.field = 'timeestimate'
                AND adl.project_id = #{projectId}
                GROUP BY
                    DATE_FORMAT(
                        adl.last_update_date,
                        '%Y-%m-%d'
                    ),
                    adl.issue_id
            )
        OR log_id IN (
            SELECT
                MAX(adl1.log_id) AS log_id
            FROM
                agile_data_log adl1
            WHERE
                adl1.field = 'timespent'
            AND adl1.project_id = #{projectId}
            GROUP BY
                DATE_FORMAT(
                    adl1.last_update_date,
                    '%Y-%m-%d'
                ),
                adl1.issue_id
        )
        GROUP BY
        DATE_FORMAT(
                last_update_date,
                '%Y-%m-%d'
            ),
            issue_id
        ORDER BY
            DATE_FORMAT(
                last_update_date,
                '%Y-%m-%d'
            )
    </select>

    <select id="selectEpicIssueList" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartListDO">
        SELECT
            ai.issue_id,
            CONCAT_WS(
                '-',
                api.project_code,
                ai.issue_num
            ) AS issue_num,
            ai.summary,
            ai.type_code,
            ai.priority_code,
            ais.`name` AS status_name,
            alv.name AS status_color,
            ai.story_points,
            ai.remaining_time + IFNULL(aw.work_times,0) AS remain_time,
            IF (t.new_value IS NULL, 0, 1) AS completed
        FROM
            agile_issue ai
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
        LEFT JOIN agile_lookup_value alv ON alv.value_code = CASE ais.category_code WHEN 'todo' THEN 'issue_status_color_todo'
                                                                                      WHEN 'doing' THEN 'issue_status_color_doing'
                                                                                      WHEN 'done' THEN 'issue_status_color_done'
                                                                                      ELSE 'issue_status_color_todo' END
        LEFT JOIN (
            SELECT
                awl.issue_id,
                SUM(awl.work_time) AS work_times
            FROM
                agile_work_log awl
            WHERE project_id = #{projectId}
            GROUP BY
                awl.issue_id
        ) aw ON aw.issue_id = ai.issue_id
        LEFT JOIN (
            SELECT
                issue_id,
                new_value
            FROM
                agile_data_log
            WHERE
                log_id IN (
                    SELECT
                        MAX(adl1.log_id) AS log_id
                    FROM
                        agile_data_log adl1
                    WHERE
                        adl1.field = 'resolution'
                    AND adl1.project_id = #{projectId}
                    GROUP BY adl1.issue_id
                )
        ) t ON ai.issue_id = t.issue_id
        WHERE
            ai.project_id = #{projectId}
        AND ai.epic_id = #{epicId}
        AND ai.type_code != 'issue_test'
    </select>

    <select id="selectVersionIssueList" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartListDO">
        SELECT
            ai.issue_id,
            CONCAT_WS(
            '-',
            api.project_code,
            ai.issue_num
            ) AS issue_num,
            ai.summary,
            ai.type_code,
            ai.priority_code,
            ais.`name` AS status_name,
            alv.name AS status_color,
            ai.story_points,
            ai.remaining_time + IFNULL(aw.work_times,0) AS remain_time,
            IF (t.new_value IS NULL, 0, 1) AS completed
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN agile_issue_status ais ON ais.id = ai.status_id
        LEFT JOIN agile_lookup_value alv ON alv.value_code = CASE ais.category_code WHEN 'todo' THEN 'issue_status_color_todo'
                                                                                        WHEN 'doing' THEN 'issue_status_color_doing'
                                                                                        WHEN 'done' THEN 'issue_status_color_done'
                                                                                        ELSE 'issue_status_color_todo' END
        LEFT JOIN (
            SELECT
                awl.issue_id,
                SUM(awl.work_time) AS work_times
            FROM
                agile_work_log awl
            WHERE project_id = #{projectId}
            GROUP BY
                awl.issue_id
        ) aw ON aw.issue_id = ai.issue_id
        LEFT JOIN (
            SELECT
                issue_id,
                new_value
            FROM
               agile_data_log
            WHERE
            log_id IN (
                SELECT
                   MAX(adl1.log_id) AS log_id
                FROM
                   agile_data_log adl1
                WHERE
                    adl1.field = 'resolution'
                    AND adl1.project_id = #{projectId}
                GROUP BY adl1.issue_id
            )
        ) t ON ai.issue_id = t.issue_id,
        agile_version_issue_rel avir
        WHERE
            ai.project_id = #{projectId}
            AND avir.version_id = #{versionId}
            AND avir.issue_id = ai.issue_id
            AND ai.type_code != 'issue_test'
    </select>

    <select id="selectByStoryPointCompletedFinal" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t11.group_day AS group_day,
        SUM(t11.story_points) AS completed_story_points
        FROM
        (
        SELECT
        t2.group_day,
        t2.issue_id,
        adl2.new_string AS story_points
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN ('resolution','Story Points')
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'Story Points'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        ) t11,
        (
        SELECT
        t10.group_day,
        t10.issue_id
        FROM
        agile_data_log adl9,
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN (
        'resolution',
        'Story Points'
        )
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'resolution'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t10
        WHERE
        adl9.log_id = t10.log_id
        AND adl9.new_value IS NOT NULL
        ) t12
        WHERE
        t11.group_day = t12.group_day
        AND t11.issue_id = t12.issue_id
        GROUP BY
        t11.group_day
    </select>

    <select id="selectByStoryPointAllFinal" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t2.group_day AS group_day,
        SUM(adl2.new_string) AS all_story_points
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN (
        'resolution',
        'Story Points'
        )
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'Story Points'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByStoryPointCountAll" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t2.group_day,
        COUNT(adl3.issue_id) AS issue_count
        FROM
        agile_data_log adl3,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN (
        'resolution',
        'Story Points'
        )
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            AND adl.field = 'Epic Link'
        </if>
        <if test="chartType == 'version_chart'">
            AND adl.field = 'Fix Version'
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2
        WHERE
        adl3.log_id = t2.log_id
        AND adl3.new_value = #{id}
        GROUP BY t2.group_day
    </select>

    <select id="selectByStoryPointCountEstimate" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t3.group_day AS group_day,
        COUNT(adl.issue_id) AS un_estimate_issue_count
        FROM
        agile_data_log adl,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN (
        'resolution',
        'Story Points'
        )
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.field = 'Story Points'
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t3
        WHERE
        adl.log_id = t3.log_id
        AND adl.new_string IS NOT NULL
        GROUP BY
        t3.group_day
    </select>

    <select id="selectByRemainTimeRemainCompleted" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t11.group_day AS group_day,
        SUM(t11.remain_time) AS completed_remain_times
        FROM
        (
        SELECT
        t2.group_day,
        t2.issue_id,
        adl2.new_string AS remain_time
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN ('resolution','timeestimate','timespent')
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'timeestimate'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        ) t11,
        (
        SELECT
        t10.group_day,
        t10.issue_id
        FROM
        agile_data_log adl9,
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN ('resolution','timeestimate', 'timespent')
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'resolution'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t10
        WHERE
        adl9.log_id = t10.log_id
        AND adl9.new_value IS NOT NULL
        ) t12
        WHERE
        t11.group_day = t12.group_day
        AND t11.issue_id = t12.issue_id
        GROUP BY
        t11.group_day
    </select>

    <select id="selectByRemainTimeWorkLogCompleted" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t11.group_day AS group_day,
        SUM(t11.work_time) AS completed_remain_times
        FROM
        (
        SELECT
        t2.group_day,
        t2.issue_id,
        adl2.new_string AS work_time
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN ('resolution', 'timeestimate', 'timespent')
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'timespent'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        ) t11,
        (
        SELECT
        t10.group_day,
        t10.issue_id
        FROM
        agile_data_log adl9,
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN ('resolution','timeestimate', 'timespent')
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'resolution'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t10
        WHERE
        adl9.log_id = t10.log_id
        AND adl9.new_value IS NOT NULL
        ) t12
        WHERE
        t11.group_day = t12.group_day
        AND t11.issue_id = t12.issue_id
        GROUP BY
        t11.group_day
    </select>

    <select id="selectByRemainTimeRemainAll" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t2.group_day AS group_day,
        SUM(adl2.new_string) AS all_remain_times
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN ('resolution', 'timeestimate', 'timespent')
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'timeestimate'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByRemainTimeWorkLogAll" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t2.group_day AS group_day,
        SUM(adl2.new_string) AS all_remain_times
        FROM
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN (
        'resolution',
        'timeestimate',
        'timespent'
        )
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'timespent'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        agile_data_log adl2
        WHERE
        t2.log_id = adl2.log_id
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByRemainTimeCountAll" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t2.group_day,
        COUNT(adl3.issue_id) AS issue_count
        FROM
        agile_data_log adl3,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN (
        'resolution',
        'timeestimate',
        'timespent'
        )
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            AND adl.field = 'Epic Link'
        </if>
        <if test="chartType == 'version_chart'">
            AND adl.field = 'Fix Version'
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2
        WHERE
        adl3.log_id = t2.log_id
        AND adl3.new_value = #{id}
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByRemainTimeCountEstimate" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t3.group_day,
        COUNT(adl.issue_id) AS un_estimate_issue_count
        FROM
        agile_data_log adl,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN (
        'resolution',
        'timeestimate',
        'timespent'
        )
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.field = 'timeestimate'
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t3
        WHERE
        adl.log_id = t3.log_id
        AND adl.new_string IS NOT NULL
        GROUP BY
        t3.group_day
    </select>

    <select id="selectByIssueCountCompletedFinal" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t2.group_day,
        COUNT(adl3.issue_id) AS issue_completed_count
        FROM
        agile_data_log adl3,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN
        <if test="chartType == 'epic_chart'">
            ('Epic Link', 'resolution')
        </if>
        <if test="chartType == 'version_chart'">
            ('Fix Version', 'resolution')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            AND adl.field = 'Epic Link'
        </if>
        <if test="chartType == 'version_chart'">
            AND adl.field = 'Fix Version' and (adl.old_value = #{id} OR adl.new_value = #{id})
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2,
        (
        SELECT
        t10.group_day,
        t10.issue_id
        FROM
        agile_data_log adl9,
        (
        SELECT
        t1.group_day,
        adl.issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN
        <if test="chartType == 'epic_chart'">
            ('Epic Link', 'resolution')
        </if>
        <if test="chartType == 'version_chart'">
            ('Fix Version', 'resolution')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND adl.field = 'resolution'
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t10
        WHERE
        adl9.log_id = t10.log_id
        AND adl9.new_value IS NOT NULL
        ) t12
        WHERE
        adl3.log_id = t2.log_id
        AND t12.group_day = t2.group_day AND t12.issue_id = t2.issue_id
        AND adl3.new_value = #{id}
        GROUP BY
        t2.group_day
    </select>

    <select id="selectByIssueCountAllFinal" resultType="io.choerodon.agile.infra.dataobject.GroupDataChartDO">
        SELECT
        t2.group_day,
        COUNT(adl3.issue_id) AS issue_count
        FROM
        agile_data_log adl3,
        (
        SELECT
        t1.group_day AS group_day,
        adl.issue_id AS issue_id,
        MAX(adl.log_id) AS log_id
        FROM
        (
        SELECT DISTINCT
        (
        DATE_FORMAT(
        last_update_date,
        '%Y-%m-%d'
        )
        ) group_day
        FROM
        agile_data_log
        WHERE
        issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        AND field IN
        <if test="chartType == 'epic_chart'">
            ('Epic Link', 'resolution')
        </if>
        <if test="chartType == 'version_chart'">
            ('Fix Version', 'resolution')
        </if>
        ORDER BY
        group_day
        ) t1,
        agile_data_log adl
        WHERE
        t1.group_day >= DATE_FORMAT(
        adl.last_update_date,
        '%Y-%m-%d'
        )
        <if test="chartType == 'epic_chart'">
            AND adl.field = 'Epic Link'
        </if>
        <if test="chartType == 'version_chart'">
            AND adl.field = 'Fix Version' and (adl.old_value = #{id} OR adl.new_value = #{id})
        </if>
        AND adl.issue_id IN (
        <if test="chartType == 'epic_chart'">
            SELECT issue_id FROM agile_issue WHERE epic_id = #{id}
        </if>
        <if test="chartType == 'version_chart'">
            SELECT issue_id FROM agile_version_issue_rel WHERE version_id = #{id}
        </if>
        )
        GROUP BY
        t1.group_day,
        adl.issue_id
        ) t2
        WHERE
        adl3.log_id = t2.log_id
        AND adl3.new_value = #{id}
        GROUP BY
        t2.group_day
    </select>

</mapper>