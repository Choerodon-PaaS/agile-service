<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.SprintMapper">

    <resultMap type="io.choerodon.agile.infra.dataobject.SprintSearchDO" id="SprintSearchDO">
        <id column="sprint_id" property="sprintId"/>
        <id column="sprint_name" property="sprintName"/>
        <id column="sprint_goal" property="sprintGoal"/>
        <id column="start_date" property="startDate"/>
        <id column="end_date" property="endDate"/>
        <id column="status_code" property="statusCode"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <collection property="assigneeIssueDOList" ofType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
            <result property="sprintId" column="asi_sprint_id"/>
            <result property="assigneeId" column="asi_assignee_id"/>
            <result property="totalStoryPoints" column="total_story_points"/>
            <result property="totalRemainingTime" column="total_remaining_time"/>
            <result property="issueCount" column="issue_count"/>
        </collection>
        <collection property="issueSearchDOList" resultMap="issueSearch">
        </collection>
    </resultMap>

    <resultMap id="issueSearch" type="io.choerodon.agile.infra.dataobject.IssueSearchDO">
        <id property="issueId" column="issue_id"/>
        <id property="issueNum" column="issue_num"/>
        <id property="typeCode" column="type_code"/>
        <id property="summary" column="summary"/>
        <id property="reporterId" column="reporter_id"/>
        <id property="description" column="description"/>
        <id property="assigneeId" column="assignee_id"/>
        <id property="projectId" column="project_id"/>
        <id property="epicId" column="epic_id"/>
        <id property="sprintId" column="is_sprint_id"/>
        <id property="storyPoints" column="story_points"/>
        <id property="statusId" column="status_id"/>
        <id property="categoryCode" column="category_code"/>
        <id property="statusName" column="status_name"/>
        <id property="priorityCode" column="priority_code"/>
        <id property="priorityName" column="priority_name"/>
        <id property="objectVersionNumber" column="is_object_version_number"/>
        <id property="epicName" column="issue_epic_name"/>
        <id property="color" column="color"/>
        <collection property="versionIds" autoMapping="true" ofType="java.lang.Long">
            <id column="version_id"/>
        </collection>
        <collection property="versionNames" autoMapping="true" ofType="java.lang.String">
            <id column="version_name"/>
        </collection>
    </resultMap>

    <select id="queryAssigneeIdsByIssueIds" resultType="java.lang.Long">
        SELECT distinct
        ai.assignee_id
        FROM agile_issue ai
        where ai.assignee_id is not null and ai.assignee_id != 0 AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
    </select>

    <select id="queryBacklogIssues" resultMap="issueSearch">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code, ai.summary,
        ai.reporter_id, ai.description,
        ai.assignee_id, ai.project_id,
        ai.epic_id, asp1.sprint_id as is_sprint_id,
        ai.story_points, ai.status_id,
        ais.category_code,
        ais.name AS status_name,
        ai.object_version_number as is_object_version_number, ai.priority_code,
        alv.name AS priority_name,
        ai1.epic_name AS issue_epic_name,
        alv2.name AS color,
        apv1.version_id AS version_id,
        apv1.name AS version_name
        FROM (select ai3.* from agile_issue ai3 where ai3.issue_id in
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        )ai
        LEFT JOIN agile_issue_status ais ON ai.status_id = ais.id
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN agile_issue ai1 ON ai.epic_id = ai1.issue_id
        LEFT JOIN agile_lookup_value alv2 ON ai1.color_code = alv2.value_code
        LEFT JOIN (SELECT aisr.issue_id, asp.sprint_id
        FROM agile_issue_sprint_rel aisr, agile_sprint asp
        WHERE aisr.sprint_id = asp.sprint_id AND asp.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai.issue_id
        LEFT JOIN (SELECT avir.issue_id, avir.version_id, apv.name
        FROM agile_version_issue_rel avir, agile_product_version apv
        WHERE avir.version_id = apv.version_id AND avir.relation_type = 'fix'
        ) apv1 ON apv1.issue_id = ai.issue_id
        WHERE asp1.sprint_id is null and ais.category_code != 'done'
        and ai.type_code != 'sub_task' and ai.type_code != 'issue_test'
        and ai.type_code != 'issue_epic' and ai.project_id = #{projectId}
        ORDER BY ai.rank asc
    </select>


    <select id="queryIssueCountMap" resultType="io.choerodon.agile.infra.dataobject.IssueCountDO">
        SELECT
        asp.sprint_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_sprint asp
        LEFT JOIN (
        SELECT aisr.sprint_id AS sprint_id, COUNT(1) AS issue_count
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND ai.type_code NOT IN ('sub_task',
        'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code != 'done'
        AND aisr.sprint_id IN
        <foreach collection="sprintIds" item="sprintId"
                 open="(" close=")" separator=",">
            #{sprintId}
        </foreach>
        GROUP BY aisr.sprint_id
        ) ic ON ic.sprint_id = asp.sprint_id
        WHERE asp.project_id = #{projectId} AND asp.sprint_id IN
        <foreach collection="sprintIds" item="sprintId"
                 open="(" close=")" separator=",">
            #{sprintId}
        </foreach>
    </select>

    <select id="queryStoryPoint" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(ai.story_points), 0)
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code = 'story' AND ai.status_id = ais.id AND ais.category_code = #{categoryCode}
        AND ai.issue_id IN
        <foreach collection="issueIds" item="issueId" index="index"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
    </select>

    <select id="queryIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND type_code NOT IN ('sub_task', 'issue_epic')
    </select>

    <sql id="queryActiveSprintSql">
        SELECT
        sp.sprint_id, sp.sprint_name,
        sp.sprint_goal, start_date,
        sp.end_date, status_code,
        sp.object_version_number
        FROM agile_sprint sp
        WHERE sp.project_id = #{projectId} AND sp.status_code = 'started'
    </sql>

    <select id="queryActiveSprintNoIssueIds" resultMap="SprintSearchDO">
        select
        spa.*
        from
        (<include refid="queryActiveSprintSql"/>)spa
    </select>

    <sql id="queryAssigneeIssueBySprintId">
        SELECT a.sprint_id as asi_sprint_id,
        a.assignee_id as asi_assignee_id,
        SUM(a.story_points) AS total_story_points,
        SUM(a.remaining_time) AS total_remaining_time,
        COUNT(1) AS issue_count
        FROM (
        SELECT
        aisr.sprint_id,
        case when ai.assignee_id is null then 0 else ai.assignee_id end AS assignee_id,
        ai.story_points, ai.remaining_time
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE aisr.issue_id = ai.issue_id
        AND ai.status_id = ais.id AND ais.category_code != 'done'
        and ai.issue_id in
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>
        ) a
        GROUP BY a.sprint_id, a.assignee_id
    </sql>

    <sql id="querySprintIssueByIssueIds">
        SELECT
        ai2.issue_id,
        IF(ai2.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai2.issue_num)) AS issue_num,
        ai2.type_code, ai2.summary,
        ai2.rank,
        ai2.reporter_id, ai2.description,
        ai2.assignee_id, ai2.project_id,
        ai2.epic_id, asp1.sprint_id as is_sprint_id,
        ai2.story_points, ai2.status_id,
        ais.category_code,
        ais.name AS status_name,
        ai2.object_version_number as is_object_version_number, ai2.priority_code,
        alv.name AS priority_name,
        ai1.epic_name AS issue_epic_name,
        alv2.name AS color,
        apv1.version_id AS version_id,
        apv1.name AS version_name
        FROM
        (select * from agile_issue ai4 WHERE
        ai4.issue_id in
        <foreach collection="issueIds" item="issueId" open="("
                 separator="," close=")">
            #{issueId}
        </foreach>)ai2
        LEFT JOIN agile_issue_status ais ON ai2.status_id = ais.id
        LEFT JOIN agile_project_info api ON ai2.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv ON ai2.priority_code = alv.value_code
        LEFT JOIN agile_issue ai1 ON ai2.epic_id = ai1.issue_id
        LEFT JOIN agile_lookup_value alv2 ON ai1.color_code = alv2.value_code
        left join agile_issue_sprint_rel aisr2 on aisr2.issue_id = ai2.issue_id
        LEFT JOIN (SELECT aisr2.issue_id, asp2.sprint_id
        FROM agile_issue_sprint_rel aisr2, agile_sprint asp2
        WHERE aisr2.sprint_id = asp2.sprint_id AND asp2.status_code != 'closed'
        ) asp1 ON asp1.issue_id = ai2.issue_id
        LEFT JOIN
        (
            SELECT
            avir.version_id,
            avir.issue_id,
            apv.NAME
            FROM
            agile_version_issue_rel avir
            LEFT JOIN agile_product_version apv ON avir.version_id = apv.version_id
            where	avir.relation_type = 'fix'
        ) apv1
        ON apv1.issue_id = ai2.issue_id

    </sql>

    <select id="queryActiveSprint" resultMap="SprintSearchDO">
        select
        spa.*,
        qais.asi_assignee_id,
        qais.asi_sprint_id,
        qais.total_story_points,
        qais.total_remaining_time,
        qais.issue_count,
        qsii.*
        from
        (<include refid="queryActiveSprintSql"/>)spa left join
        (<include refid="querySprintIssueByIssueIds"/>)qsii on qsii.is_sprint_id = spa.sprint_id left join
        (<include refid="queryAssigneeIssueBySprintId"/>)qais
        on spa.sprint_id = qais.asi_sprint_id order by qsii.rank ASC
    </select>

    <sql id="queryPlanSprintSql">
        SELECT
        sp.sprint_id, sp.sprint_name,
        sp.sprint_goal, start_date,
        sp.end_date, status_code,
        sp.object_version_number
        FROM agile_sprint sp
        WHERE sp.project_id = #{projectId} AND sp.status_code = 'sprint_planning'
    </sql>

    <select id="queryPlanSprint" resultMap="SprintSearchDO">
        select
        spa.*,
        qais.asi_assignee_id,
        qais.total_story_points,
        qais.asi_sprint_id,
        qais.total_remaining_time,
        qais.issue_count,
        qsii.*
        from
        (<include refid="queryPlanSprintSql"/>)spa
        left join(<include refid="querySprintIssueByIssueIds"/>)qsii on qsii.is_sprint_id = spa.sprint_id
        left join (<include refid="queryAssigneeIssueBySprintId"/>)qais
        on spa.sprint_id = qais.asi_sprint_id order by spa.sprint_id desc,qsii.rank ASC
    </select>

    <select id="queryPlanSprintNoIssueIds" resultType="io.choerodon.agile.infra.dataobject.SprintSearchDO">
        select
        spa.*
        from
        (<include refid="queryPlanSprintSql"/>)spa
    </select>

    <select id="queryAssigneeIssueBySprintId" parameterType="java.util.Map"
            resultType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
        SELECT a.sprint_id, a.assignee_id,
        SUM(a.story_points) AS total_story_points,
        SUM(a.remaining_time) AS total_remaining_time,
        COUNT(1) AS issue_count
        FROM (
        SELECT
        aisr.sprint_id,
        ai.assignee_id,
        ai.story_points, ai.remaining_time
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE aisr.issue_id = ai.issue_id
        AND ai.status_id = ais.id AND ais.category_code != 'done' AND aisr.sprint_id = #{sprintId}
        and ai.issue_id in
        <foreach collection="issueIds" item="issueId" index="index"
                 open="'" close="'" separator=",">
            #{issueId}
        </foreach>
        ) a
        GROUP BY a.sprint_id, a.assignee_id
    </select>

    <select id="queryNameByOptions" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
        sprint_id, sprint_name,
        start_date, end_date
        FROM agile_sprint
        WHERE project_id = #{projectId}
        <if test="sprintStatusCodes != null and sprintStatusCodes.size > 0">
            AND status_code IN
            <foreach collection="sprintStatusCodes" item="sprintStatusCode"
                     open="(" close=")" separator=",">
                #{sprintStatusCode}
            </foreach>
        </if>
        ORDER BY last_update_date DESC
    </select>

    <select id="queryNotDoneIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code != 'done'
    </select>

    <select id="queryDoneIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code = 'done'
    </select>

    <select id="queryPlanSprintName" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
        sprint_id,
        sprint_name
        FROM agile_sprint
        WHERE project_id = #{projectId} AND status_code = 'sprint_planning'
    </select>


    <select id="queryByProjectIdAndSprintId" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT *
        FROM agile_sprint
        WHERE sprint_id = #{sprintId} AND project_Id = #{projectId}
    </select>

    <select id="getActiveSprint" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT
            sprint_id,
            sprint_name,
            start_date,
            end_date
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
            AND status_code = 'started'
    </select>

    <select id="hasIssue" resultType="java.lang.Boolean">
        SELECT CASE COUNT(1) WHEN 0 THEN FALSE ELSE TRUE END
        FROM agile_issue ai
        LEFT JOIN agile_issue_sprint_rel aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="queryMaxRank" resultType="java.lang.String">
        SELECT MAX(ai.rank)
        FROM agile_issue ai
        LEFT JOIN (SELECT aisr1.sprint_id, aisr1.issue_id
        FROM agile_issue_sprint_rel aisr1, agile_sprint asp
        WHERE aisr1.project_id = #{projectId} AND aisr1.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed') aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="selectCountByStartedSprint" resultType="java.lang.Integer">
        SELECT
            COUNT(sprint_id)
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
            AND status_code = 'started'
    </select>

    <select id="queryMinRank" resultType="java.lang.String">
        SELECT MIN(ai.rank)
        FROM agile_issue ai
        LEFT JOIN (SELECT aisr1.sprint_id, aisr1.issue_id
        FROM agile_issue_sprint_rel aisr1, agile_sprint asp
        WHERE aisr1.project_id = #{projectId} AND aisr1.sprint_id = asp.sprint_id
        AND asp.status_code != 'closed') aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="queryLastSprint" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT *
        FROM agile_sprint
        WHERE sprint_id = (
                SELECT MAX(sprint_id)
                FROM agile_sprint
                WHERE project_id = #{projectId}
            )
    </select>

    <select id="queryAssigneeIssueCount" resultType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
        SELECT a.sprint_id, a.assignee_id,
        SUM(a.story_points) AS total_story_points,
        SUM(a.remaining_time) AS total_remaining_time,
        COUNT(1) AS issue_count
        FROM (
        SELECT
        aisr.sprint_id, IFNULL(ai.assignee_id, 0) AS assignee_id,
        ai.story_points, ai.remaining_time
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE aisr.issue_id = ai.issue_id
        AND ai.status_id = ais.id AND ais.category_code != 'done' AND aisr.sprint_id IN
        <foreach collection="sprintIds" item="sprintId" open="("
                 separator="," close=")">
            #{sprintId}
        </foreach>
        and ai.issue_id IN
        <foreach collection="issueIds" item="issueId" index="index"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        <if test="assigned == false">
            AND (ai.assignee_id IS NULL OR ai.assignee_id = 0)
        </if>
        <if test="assigned == true">
            AND ai.assignee_id IS NOT NULL AND ai.assignee_id != 0
        </if>
        ) a
        GROUP BY a.sprint_id, a.assignee_id
    </select>

    <select id="queryAssigneeIssueCountById" resultType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
        SELECT a.sprint_id, a.assignee_id,
        SUM(a.story_points) AS total_story_points,
        SUM(a.remaining_time) AS total_remaining_time,
        COUNT(1) AS issue_count
        FROM (
        SELECT
        aisr.sprint_id, IFNULL(ai.assignee_id, 0) AS assignee_id,
        ai.story_points, ai.remaining_time
        FROM agile_issue ai, agile_issue_sprint_rel aisr
        WHERE aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        and ai.issue_id IN
        <foreach collection="issueIds" item="issueId" index="index"
                 open="(" close=")" separator=",">
            #{issueId}
        </foreach>
        <if test="assigned == false">
            AND (ai.assignee_id IS NULL OR ai.assignee_id = 0)
        </if>
        <if test="assigned == true">
            AND ai.assignee_id IS NOT NULL AND ai.assignee_id != 0
        </if>
        ) a
        GROUP BY a.sprint_id, a.assignee_id
    </select>

    <select id="queryIssueIdOrderByRankDesc" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code != 'done'
        ORDER BY rank DESC
    </select>

    <select id="queryAllRankIssueIds" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_issue ai, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        ORDER BY rank DESC
    </select>

    <select id="queryParentsDoneUnfinishedSubtasks" resultType="io.choerodon.agile.infra.dataobject.IssueNumDO">
        SELECT ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num, ai.project_id
        FROM agile_issue ai
              LEFT JOIN agile_project_info api ON ai.project_id = api.project_id,
              agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
               AND ai.status_id = ais.id AND ais.category_code = 'done'
               AND ai.issue_id IN (SELECT ai2.parent_issue_id
                                    FROM agile_issue ai2, agile_issue_status ais2, agile_issue_sprint_rel aisr2
                                    WHERE ai2.project_id = #{projectId} AND aisr2.issue_id = ai2.issue_id AND aisr2.sprint_id = #{sprintId}
				                    AND ai2.type_code = 'sub_task'
                                    AND ai2.status_id = ais2.id AND ais2.category_code != 'done'
                                    )

    </select>

    <select id="queryIssueIds" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM  agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
              AND ai.type_code != 'sub_task' AND ai.status_id = ais.id
              AND ais.category_code != 'done'
    </select>

    <select id="querySprintNameBySprintId" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT sprint_id, sprint_name
        FROM agile_sprint
        WHERE project_id = #{projectId} AND sprint_id = #{sprintId}
    </select>

    <select id="queryUnClosedSprint" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT
          sprint_id,
          sprint_name
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
            AND status_code != 'closed'
    </select>

</mapper>