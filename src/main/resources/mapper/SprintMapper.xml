<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.SprintMapper">

    <select id="queryIssueCountMap" resultType="io.choerodon.agile.infra.dataobject.IssueCountDO">
        SELECT
        asp.sprint_id AS id, IFNULL(ic.issue_count, 0) AS issue_count
        FROM agile_sprint asp
        LEFT JOIN (
        SELECT aisr.sprint_id AS sprint_id, COUNT(1) AS issue_count
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND ai.type_code NOT IN ('sub_task',
        'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code != 'done'
        AND aisr.sprint_id IN
        <foreach collection="sprintIds" item="sprintId"
                 open="(" close=")" separator=",">
            #{sprintId}
        </foreach>
        GROUP BY aisr.sprint_id
        ) ic ON ic.sprint_id = asp.sprint_id
        WHERE asp.project_id = #{projectId} AND asp.sprint_id IN
        <foreach collection="sprintIds" item="sprintId"
                 open="(" close=")" separator=",">
            #{sprintId}
        </foreach>
    </select>

    <select id="queryStoryPoint" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(ai.story_points), 0)
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code = 'story' AND ai.status_id = ais.id AND ais.category_code = #{categoryCode}
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.ownIssue != "" and advancedSearchArgs.ownIssue == "true"'>
                AND ai.assignee_id = #{userId}
            </if>
        </if>
    </select>

    <select id="queryIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND type_code NOT IN ('sub_task', 'issue_epic')
    </select>

    <select id="queryActiveSprint" resultType="io.choerodon.agile.infra.dataobject.SprintSearchDO">
        SELECT
        sprint_id, sprint_name,
        sprint_goal, start_date,
        end_date, status_code,
        object_version_number
        FROM agile_sprint
        WHERE project_id = #{projectId} AND status_code = 'started'
    </select>

    <select id="queryPlanSprint" resultType="io.choerodon.agile.infra.dataobject.SprintSearchDO">
        SELECT
        sprint_id, sprint_name,
        sprint_goal, start_date,
        end_date, status_code,
        object_version_number
        FROM agile_sprint
        WHERE project_id = #{projectId} AND status_code = 'sprint_planning'
    </select>

    <select id="queryNameByOptions" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
        sprint_id,
        sprint_name
        FROM agile_sprint
        WHERE project_id = #{projectId}
        <if test="sprintStatusCodes != null and sprintStatusCodes.size > 0">
            AND status_code IN
            <foreach collection="sprintStatusCodes" item="sprintStatusCode"
                     open="(" close=")" separator=",">
                #{sprintStatusCode}
            </foreach>
        </if>
    </select>

    <select id="queryNotDoneIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code != 'done'
    </select>

    <select id="queryDoneIssueCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code = 'done'
    </select>

    <select id="queryPlanSprintName" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT
        sprint_id,
        sprint_name
        FROM agile_sprint
        WHERE project_id = #{projectId} AND status_code = 'sprint_planning'
    </select>


    <select id="queryByProjectIdAndSprintId" resultType="io.choerodon.agile.infra.dataobject.SprintSearchDO">
        SELECT *
        FROM agile_sprint
        WHERE sprint_id = #{sprintId} AND project_Id = #{projectId}
    </select>

    <select id="getActiveSprint" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT
            sprint_id,
            sprint_name,
            start_date,
            end_date
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
            AND status_code = 'started'
    </select>

    <select id="hasIssue" resultType="java.lang.Boolean">
        SELECT IF(COUNT(1) = 0, FALSE, TRUE)
        FROM agile_issue ai
        LEFT JOIN agile_issue_sprint_rel aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="queryMaxRank" resultType="java.lang.String">
        SELECT MAX(ai.rank)
        FROM agile_issue ai
        LEFT JOIN agile_issue_sprint_rel aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="selectCountByStartedSprint" resultType="java.lang.Integer">
        SELECT
            COUNT(sprint_id)
        FROM
            agile_sprint
        WHERE
            project_id = #{projectId}
            AND status_code = 'started'
    </select>

    <select id="queryMinRank" resultType="java.lang.String">
        SELECT MIN(ai.rank)
        FROM agile_issue ai
        LEFT JOIN agile_issue_sprint_rel aisr ON aisr.issue_id = ai.issue_id
        WHERE ai.project_id = #{projectId} AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        <choose>
            <when test="sprintId != null and sprintId != 0">
                AND aisr.sprint_id = #{sprintId}
            </when>
            <otherwise>
                AND (aisr.sprint_id IS NULL OR aisr.sprint_id = 0)
            </otherwise>
        </choose>
    </select>

    <select id="queryLastSprint" resultType="io.choerodon.agile.infra.dataobject.SprintDO">
        SELECT *
        FROM agile_sprint
        WHERE sprint_id = (
                SELECT MAX(sprint_id)
                FROM agile_sprint
                WHERE project_id = #{projectId}
            )
    </select>

    <select id="queryAssigneeIssueCount" resultType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
        SELECT
        aisr.sprint_id, ai.assignee_id,
        SUM(ai.story_points) AS total_story_points,
        SUM(ai.remaining_time) AS total_remaining_time,
        COUNT(1) AS issue_count
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND ai.type_code NOT IN ('sub_task',
        'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code != 'done' AND aisr.sprint_id IN
        <foreach collection="sprintIds" item="sprintId" open="("
                 separator="," close=")">
            #{sprintId}
        </foreach>
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.versionId != null'>
                AND ai.issue_id IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id =
                #{advancedSearchArgs.versionId})
            </if>
            <if test='advancedSearchArgs.epicId != null'>
                AND ai.epic_id = #{advancedSearchArgs.epicId}
            </if>
            <if test='advancedSearchArgs.noVersion != "" and advancedSearchArgs.noVersion == "true"'>
                AND ai.issue_id NOT IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id != 0)
            </if>
            <if test='advancedSearchArgs.noEpic != "" and advancedSearchArgs.noEpic == "true"'>
                AND (ai.epic_id IS NULL OR ai.epic_id = 0)
            </if>
            <if test='advancedSearchArgs.ownIssue != "" and advancedSearchArgs.ownIssue == "true"'>
                AND ai.assignee_id = #{userId}
            </if>
            <if test='advancedSearchArgs.onlyStory != "" and advancedSearchArgs.onlyStory == "true"'>
                AND ai.type_code = 'story'
            </if>
        </if>
        GROUP BY aisr.sprint_id, ai.assignee_id
    </select>

    <select id="queryAssigneeIssueCountById" resultType="io.choerodon.agile.infra.dataobject.AssigneeIssueDO">
        SELECT
        aisr.sprint_id, ai.assignee_id,
        SUM(ai.story_points) AS total_story_points,
        SUM(ai.remaining_time) AS total_remaining_time,
        COUNT(1) AS issue_count
        FROM agile_issue ai, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        <if test='advancedSearchArgs != null'>
            <if test='advancedSearchArgs.versionId != null'>
                AND ai.issue_id IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id =
                #{advancedSearchArgs.versionId})
            </if>
            <if test='advancedSearchArgs.epicId != null'>
                AND ai.epic_id = #{advancedSearchArgs.epicId}
            </if>
            <if test='advancedSearchArgs.noVersion != "" and advancedSearchArgs.noVersion == "true"'>
                AND ai.issue_id NOT IN (SELECT issue_id FROM agile_version_issue_rel WHERE version_id != 0)
            </if>
            <if test='advancedSearchArgs.noEpic != "" and advancedSearchArgs.noEpic == "true"'>
                AND (ai.epic_id IS NULL OR ai.epic_id = 0)
            </if>
            <if test='advancedSearchArgs.ownIssue != "" and advancedSearchArgs.ownIssue == "true"'>
                AND ai.assignee_id = #{userId}
            </if>
            <if test='advancedSearchArgs.onlyStory != "" and advancedSearchArgs.onlyStory == "true"'>
                AND ai.type_code = 'story'
            </if>
        </if>
        GROUP BY aisr.sprint_id, ai.assignee_id
    </select>

    <select id="queryIssueIdOrderByRankDesc" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
        AND ai.type_code NOT IN ('sub_task', 'issue_epic')
        AND ai.status_id = ais.id AND ais.category_code != 'done'
        ORDER BY rank DESC
    </select>

    <select id="queryParentsDoneUnfinishedSubtasks" resultType="io.choerodon.agile.infra.dataobject.IssueNumDO">
        SELECT ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num, ai.project_id
        FROM agile_issue ai
              LEFT JOIN agile_project_info api ON ai.project_id = api.project_id,
              agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
               AND ai.status_id = ais.id AND ais.category_code = 'done'
               AND ai.issue_id IN (SELECT ai2.parent_issue_id
                                    FROM agile_issue ai2, agile_issue_status ais2, agile_issue_sprint_rel aisr2
                                    WHERE ai2.project_id = #{projectId} AND aisr2.issue_id = ai2.issue_id AND aisr2.sprint_id = #{sprintId}
				                    AND ai2.type_code = 'sub_task'
                                    AND ai2.status_id = ais2.id AND ais2.category_code != 'done'
                                    )

    </select>

    <select id="selectNameBySprintId" resultType="java.lang.String">
        SELECT sprint_name
        FROM agile_sprint
        WHERE sprint_id = #{sprintId}
    </select>

    <select id="queryIssueIds" resultType="java.lang.Long">
        SELECT ai.issue_id
        FROM  agile_issue ai, agile_issue_status ais, agile_issue_sprint_rel aisr
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id AND aisr.sprint_id = #{sprintId}
              AND ai.type_code != 'sub_task' AND ai.status_id = ais.id
              AND ais.category_code != 'done'
    </select>

    <select id="querySprintNameBySprintId" resultType="io.choerodon.agile.infra.dataobject.SprintNameDO">
        SELECT sprint_id, sprint_name
        FROM agile_sprint
        WHERE project_id = #{projectId} AND sprint_id = #{sprintId}
    </select>

    <select id="queryReportDoneIssues" resultType="io.choerodon.agile.infra.dataobject.IssueDO">
        SELECT
        ai.issue_id, CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
        ai.type_code, ai.status_id,


        ais.name AS status_name,
        ais.category_code AS status_code,


        ai.summary, ai.priority_code,
        alv.name AS priority_name,
        ai.assignee_id, ai.project_id
        FROM agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN (SELECT
        FROM agile_issue_status ais
        LEFT JOIN agile_issue ai ON ai.status_id = ais.id
        WHERE ais.project_id = #{projectId}
        <if test="reportSearchIssue.">

        </if>
        )
        WHERE ai.project_id = #{projectId} AND aisr.issue_id = ai.issue_id
        AND ai.status_id = ais.id AND ai.issue_id = adl.issue_id
    </select>

    <select id="queryReportSearchIssue" resultType="io.choerodon.agile.infra.dataobject.SprintReportIssueSearchDO">
        SELECT
                ai.issue_id AS issue_id,             ais.category_code AS category_code,
                ais.name AS name,                   ais.is_completed AS completed,

                adl2.new_value AS new_status_id,     adl2.category_code AS new_category_code,
                adl2.name AS new_name,               adl2.is_completed AS new_completed,

                adl4.old_value AS old_status_id,     adl4.category_code AS old_category_code,
                adl4.name AS old_name,               adl4.is_completed AS old_completed,

                adl6.new_string AS story_points,
                CONCAT_WS('-', api.project_code, ai.issue_num) AS issue_num,
                ai.type_code AS type_code,            ai.status_id AS status_id,
                ai.summary AS summary,                ai.priority_code AS priority_code,
                alv.name AS priority_name,            ai.assignee_id AS assignee_id,
                ai.project_id AS project_id
        FROM agile_issue_sprint_rel aisr
        LEFT JOIN (
        SELECT adl1.issue_id, adl1.new_value, ais1.category_code, ais1.name, ais1.is_completed
        FROM agile_issue_sprint_rel aisr1, agile_data_log adl1, agile_issue_status ais1
        WHERE aisr1.project_id = #{projectId} AND aisr1.sprint_id = #{sprintId}
        AND aisr1.issue_id = adl1.issue_id AND adl1.field = 'status'
        AND ais1.id = adl1.new_value
        <if test="actualEndDate != null">
            adl.creation_date &lt; #{actualEndDate}
        </if>
        ORDER BY adl1.log_id DESC limit 1
        ) adl2 ON adl2.issue_id = aisr.issue_id
        LEFT JOIN (
        SELECT adl3.issue_id, adl3.old_value, ais2.category_code, ais2.name, ais2.is_completed
        FROM agile_issue_sprint_rel aisr2, agile_data_log adl3, agile_issue_status ais2
        WHERE aisr2.project_id = #{projectId} AND aisr2.sprint_id = #{sprintId}
        AND aisr2.issue_id = adl3.issue_id AND adl3.field = 'status'
        AND ais2.id = adl3.old_value
        <if test="actualEndDate != null">
            adl3.creation_date > #{actualEndDate}
        </if>
        ORDER BY adl3.log_id ASC limit 1
        ) adl4 ON adl4.issue_id = aisr.issue_id
        LEFT JOIN (
        SELECT adl5.issue_id, adl5.new_string
        FROM agile_issue_sprint_rel aisr3, agile_data_log adl5
        WHERE aisr3.project_id = #{projectId} AND aisr3.sprint_id = #{sprintId}
        AND aisr3.issue_id = adl5.issue_id AND adl5.field = 'Story Points'
        <if test="actualEndDate != null">
            adl5.creation_date > #{actualEndDate}
        </if>
        ORDER BY adl5.log_id DESC limit 1
        ) adl6 ON adl6.issue_id = aisr.issue_id,
        agile_issue ai
        LEFT JOIN agile_project_info api ON ai.project_id = api.project_id
        LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code,
        agile_issue_status ais
        WHERE aisr.project_id = #{projectId} AND aisr.sprint_id = #{sprintId}
        AND aisr.issue_id = ai.issue_id AND ai.status_id = ais.id
        AND (adl2.new_value IS NOT null AND adl2.new_value != '' AND adl2.is_completed = ${status}
              OR (
                   (adl2.new_value IS null OR adl2.new_value = '') AND adl4.old_value IS NOT null
                   AND adl4.old_value != '' AND adl4.is_completed = ${status}
                 )
              OR (
                    (adl2.new_value IS null OR adl2.new_value = '') AND (adl4.old_value IS null OR adl4.old_value = '')
                    AND ais.is_completed = ${status}
                 )
             )
        ORDER BY ai.issue_id DESC
    </select>

</mapper>