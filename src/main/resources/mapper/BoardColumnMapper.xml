<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.choerodon.agile.infra.mapper.BoardColumnMapper">

    <resultMap id="BoardColumnAndIssues" type="io.choerodon.agile.infra.dataobject.ColumnAndIssueDO">
        <id property="columnId" column="abc_column_id"/>
        <id property="categoryCode" column="abc_category_code"/>
        <id property="boardId" column="abc_board_id"/>
        <id property="minNum" column="abc_min_num"/>
        <id property="maxNum" column="abc_max_num"/>
        <id property="name" column="abc_name"/>
        <id property="sequence" column="abc_sequence"/>
        <id property="color" column="abc_color"/>
        <id property="objectVersionNumber" column="abc_object_version_number"/>
        <collection property="subStatuses" autoMapping="true" ofType="io.choerodon.agile.infra.dataobject.SubStatus">
            <id property="id" column="ais_id"/>
            <id property="name" column="ais_name"/>
            <id property="categoryCode" column="ais_category_code"/>
            <id property="completed" column="ais_completed"/>
            <id property="objectVersionNumber" column="ais_object_version_number"/>
            <collection property="issues" autoMapping="true" columnPrefix="ai_"
                        ofType="io.choerodon.agile.infra.dataobject.IssueForBoardDO"/>
        </collection>
    </resultMap>

    <select id="selectColumnsByBoardId" resultMap="BoardColumnAndIssues">
        SELECT
        abc.column_id AS abc_column_id,
        abc.category_code AS abc_category_code,
        abc.board_id AS abc_board_id,
        abc.min_num AS abc_min_num,
        abc.max_num AS abc_max_num,
        abc.name AS abc_name,
        abc.sequence AS abc_sequence,
        alv1.name AS abc_color,
        abc.object_version_number AS abc_object_version_number,
        ais.id AS ais_id,
        ais.name AS ais_name,
        ais.category_code AS ais_category_code,
        ais.is_completed AS ais_completed,
        ais.object_version_number AS ais_object_version_number,
        ai.issue_id AS ai_issue_id,
        IF(ai.issue_num IS NULL, NULL, CONCAT_WS('-', api.project_code, ai.issue_num)) AS ai_issue_num,
        ai.summary AS ai_summary,
        ai.assignee_id AS ai_assignee_id,
        alv.name AS ai_priority_name,
        ai.parent_issue_id AS ai_parent_issue_id,
        ai.type_code AS ai_type_code,
        ai.object_version_number AS ai_object_version_number
        FROM
        agile_board_column abc
        LEFT JOIN agile_board_column_status_rel abcsr ON abc.column_id = abcsr.column_id
        LEFT JOIN agile_issue_status ais ON abcsr.status_id = ais.id
        LEFT JOIN agile_issue ai ON ai.sprint_id = #{activeSprintId} AND ai.status_id = ais.id AND ai.type_code !=
        'issue_epic'
        <if test='onlyStory != null and onlyStory == true'>
            AND ai.type_code = 'story'
        </if>
        <if test='assigneeId != null'>
            AND ai.assignee_id = #{assigneeId}
        </if>
        LEFT JOIN agile_project_info api ON api.project_id = ai.project_id
        LEFT JOIN agile_lookup_value alv ON ai.priority_code = alv.value_code
        LEFT JOIN agile_lookup_value alv1 ON abc.color_code = alv1.value_code
        WHERE
        abc.project_id = #{projectId} AND abc.board_id = #{boardId}
        ORDER BY abc.sequence
    </select>

    <update id="columnSort">
        UPDATE agile_board_column
        SET sequence              = sequence + 1,
            object_version_number = object_version_number + 1
        WHERE board_id = #{boardId}
              AND sequence &gt;= #{sequence} AND sequence &lt; #{originSequence}
    </update>

    <update id="columnSortDesc">
        UPDATE agile_board_column
        SET sequence              = sequence - 1,
            object_version_number = object_version_number + 1
        WHERE board_id = #{boardId}
              AND sequence &gt; #{originSequence} AND sequence &lt;= #{sequence}
    </update>

    <update id="updateColumnCategory">
        UPDATE agile_board_column
        SET category_code = CASE
                            WHEN sequence = 0
                                THEN 'todo'
                            WHEN sequence = #{columnNum} - 1
                                THEN 'done'
                            ELSE 'doing'
                            END
        WHERE board_id = #{boardId}
    </update>

    <update id="updateColumnColor">
        UPDATE agile_board_column
        SET color_code = CASE
                         WHEN sequence = 0
                             THEN 'column_color_todo'
                         WHEN sequence = #{columnNum} - 1
                             THEN 'column_color_done'
                         ELSE 'column_color_doing'
                         END
        WHERE board_id = #{boardId}
    </update>

    <select id="selectColumnByStatusId" resultType="io.choerodon.agile.infra.dataobject.BoardColumnCheckDO">
        SELECT
            abc.min_num,
            abc.max_num,
            aif.co AS issue_count
        FROM
            agile_board_column abc,
            agile_board_column_status_rel abcsr,
            (
                SELECT COUNT(ai.issue_id) AS co
                FROM
                    agile_issue ai, agile_issue_status ais, agile_board_column_status_rel abcsr2
                WHERE
                    abcsr2.column_id = #{columnId} AND ais.column_id = abcsr2.column_id AND ai.status_id = ais.id
            ) aif
        WHERE
            abc.column_id = abcsr.column_id
            AND abcsr.status_id = #{statusId}
            AND abcsr.column_id = #{columnId}
    </select>

    <select id="selectColumnByStatusIdWithoutSubIssue"
            resultType="io.choerodon.agile.infra.dataobject.BoardColumnCheckDO">
        SELECT
            abc.min_num,
            abc.max_num,
            aif.co AS issue_count
        FROM
            agile_board_column abc,
            agile_board_column_status_rel abcsr,
            (
                SELECT COUNT(ai.issue_id) AS co
                FROM
                    agile_issue ai, agile_issue_status ais, agile_board_column_status_rel abcsr2
                WHERE
                    abcsr2.column_id = #{columnId} AND ais.column_id = abcsr2.column_id AND ai.status_id = ais.id AND
                    ai.parent_issue_id = 0
            ) aif
        WHERE
            abc.column_id = abcsr.column_id
            AND abcsr.status_id = #{statusId}
            AND abcsr.column_id = #{columnId}
    </select>

    <select id="queryColumnStatusRelByProjectId" resultType="io.choerodon.agile.infra.dataobject.ColumnWithStatusRelDO">
        SELECT
            DISTINCT
            (abcsr.status_id),
            ais.category_code
        FROM
            agile_board_column_status_rel abcsr
            LEFT JOIN agile_issue_status ais ON abcsr.status_id = ais.id
        WHERE
            abcsr.project_id = #{projectId}
    </select>

    <select id="selectColumnByColumnId" resultType="io.choerodon.agile.infra.dataobject.BoardColumnCheckDO">
        SELECT
            abc.min_num,
            abc.max_num,
            COUNT(ai.issue_id) AS issue_count
        FROM
            agile_board_column abc
            LEFT JOIN agile_board_column_status_rel abcsr ON abc.column_id = abcsr.column_id
            LEFT JOIN agile_issue_status ais ON abcsr.status_id = ais.id
            LEFT JOIN agile_issue ai ON ai.sprint_id = #{activeSprintId}
                                        AND ai.status_id = ais.id
                                        AND ai.type_code != 'issue_epic'
        WHERE
            abc.column_id = #{columnId}
    </select>

    <select id="selectColumnByColumnIdWithSubIssue" resultType="io.choerodon.agile.infra.dataobject.BoardColumnCheckDO">
        SELECT
            abc.min_num,
            abc.max_num,
            COUNT(ai.issue_id) AS issue_count
        FROM
            agile_board_column abc
            LEFT JOIN agile_board_column_status_rel abcsr ON abc.column_id = abcsr.column_id
            LEFT JOIN agile_issue_status ais ON abcsr.status_id = ais.id
            LEFT JOIN agile_issue ai ON ai.sprint_id = #{activeSprintId}
                                        AND ai.status_id = ais.id
                                        AND ai.type_code != 'issue_epic'
        WHERE
            abc.column_id = #{columnId}
    </select>

    <update id="updateMaxAndMinNum" parameterType="io.choerodon.agile.api.dto.ColumnWithMaxMinNumDTO">
        UPDATE agile_board_column
        SET max_num               = #{columnInfo.maxNum},
            min_num               = #{columnInfo.minNum},
            object_version_number = object_version_number + 1
        WHERE
            project_id = #{columnInfo.projectId}
            AND column_id = #{columnInfo.columnId}
            AND object_version_number = #{columnInfo.objectVersionNumber}
    </update>

    <select id="selectByBoardIdOrderBySequence" resultType="io.choerodon.agile.infra.dataobject.BoardColumnDO">
        SELECT *
        FROM
            agile_board_column
        WHERE
            board_id = #{boardId}
        ORDER BY sequence
    </select>

    <update id="updateSequenceWhenDelete">
        UPDATE agile_board_column
        SET sequence = sequence - 1
        WHERE
            board_id = #{boardId} AND sequence > #{sequence}
    </update>

    <select id="queryAssigneeIdsBySprintId" resultType="java.lang.Long">
        SELECT DISTINCT assignee_id
        FROM
            agile_issue
        WHERE
            project_id = #{projectId}
            AND sprint_id = #{activeSprintId}
    </select>

</mapper>